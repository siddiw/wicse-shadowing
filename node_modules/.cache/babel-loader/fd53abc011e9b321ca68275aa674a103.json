{"ast":null,"code":"\"use strict\";\n\nfunction _typeof(e) {\n  return (_typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (e) {\n    return typeof e;\n  } : function (e) {\n    return e && \"function\" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? \"symbol\" : typeof e;\n  })(e);\n}\n\nfunction _inherits(e, t) {\n  if (\"function\" != typeof t && null !== t) throw new TypeError(\"Super expression must either be null or a function\");\n  e.prototype = Object.create(t && t.prototype, {\n    constructor: {\n      value: e,\n      writable: !0,\n      configurable: !0\n    }\n  }), t && _setPrototypeOf(e, t);\n}\n\nfunction _setPrototypeOf(e, t) {\n  return (_setPrototypeOf = Object.setPrototypeOf || function (e, t) {\n    return e.__proto__ = t, e;\n  })(e, t);\n}\n\nfunction _createSuper(i) {\n  var r = _isNativeReflectConstruct();\n\n  return function () {\n    var e,\n        t = _getPrototypeOf(i);\n\n    if (r) {\n      var n = _getPrototypeOf(this).constructor;\n\n      e = Reflect.construct(t, arguments, n);\n    } else e = t.apply(this, arguments);\n\n    return _possibleConstructorReturn(this, e);\n  };\n}\n\nfunction _possibleConstructorReturn(e, t) {\n  return !t || \"object\" !== _typeof(t) && \"function\" != typeof t ? _assertThisInitialized(e) : t;\n}\n\nfunction _assertThisInitialized(e) {\n  if (void 0 === e) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  return e;\n}\n\nfunction _isNativeReflectConstruct() {\n  if (\"undefined\" == typeof Reflect || !Reflect.construct) return !1;\n  if (Reflect.construct.sham) return !1;\n  if (\"function\" == typeof Proxy) return !0;\n\n  try {\n    return Date.prototype.toString.call(Reflect.construct(Date, [], function () {})), !0;\n  } catch (e) {\n    return !1;\n  }\n}\n\nfunction _getPrototypeOf(e) {\n  return (_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function (e) {\n    return e.__proto__ || Object.getPrototypeOf(e);\n  })(e);\n}\n\nfunction _createForOfIteratorHelper(e, t) {\n  var n;\n\n  if (\"undefined\" == typeof Symbol || null == e[Symbol.iterator]) {\n    if (Array.isArray(e) || (n = _unsupportedIterableToArray(e)) || t && e && \"number\" == typeof e.length) {\n      n && (e = n);\n\n      var i = 0,\n          r = function () {};\n\n      return {\n        s: r,\n        n: function () {\n          return i >= e.length ? {\n            done: !0\n          } : {\n            done: !1,\n            value: e[i++]\n          };\n        },\n        e: function (e) {\n          throw e;\n        },\n        f: r\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var o,\n      a = !0,\n      l = !1;\n  return {\n    s: function () {\n      n = e[Symbol.iterator]();\n    },\n    n: function () {\n      var e = n.next();\n      return a = e.done, e;\n    },\n    e: function (e) {\n      l = !0, o = e;\n    },\n    f: function () {\n      try {\n        a || null == n.return || n.return();\n      } finally {\n        if (l) throw o;\n      }\n    }\n  };\n}\n\nfunction _unsupportedIterableToArray(e, t) {\n  if (e) {\n    if (\"string\" == typeof e) return _arrayLikeToArray(e, t);\n    var n = Object.prototype.toString.call(e).slice(8, -1);\n    return \"Object\" === n && e.constructor && (n = e.constructor.name), \"Map\" === n || \"Set\" === n ? Array.from(e) : \"Arguments\" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n) ? _arrayLikeToArray(e, t) : void 0;\n  }\n}\n\nfunction _arrayLikeToArray(e, t) {\n  (null == t || t > e.length) && (t = e.length);\n\n  for (var n = 0, i = new Array(t); n < t; n++) i[n] = e[n];\n\n  return i;\n}\n\nfunction _classCallCheck(e, t) {\n  if (!(e instanceof t)) throw new TypeError(\"Cannot call a class as a function\");\n}\n\nfunction _defineProperties(e, t) {\n  for (var n = 0; n < t.length; n++) {\n    var i = t[n];\n    i.enumerable = i.enumerable || !1, i.configurable = !0, \"value\" in i && (i.writable = !0), Object.defineProperty(e, i.key, i);\n  }\n}\n\nfunction _createClass(e, t, n) {\n  return t && _defineProperties(e.prototype, t), n && _defineProperties(e, n), e;\n}\n\nvar Emitter = function () {\n  function e() {\n    _classCallCheck(this, e);\n  }\n\n  return _createClass(e, [{\n    key: \"on\",\n    value: function (e, t) {\n      return this._callbacks = this._callbacks || {}, this._callbacks[e] || (this._callbacks[e] = []), this._callbacks[e].push(t), this;\n    }\n  }, {\n    key: \"emit\",\n    value: function (e) {\n      this._callbacks = this._callbacks || {};\n      var t = this._callbacks[e];\n\n      if (t) {\n        for (var n = arguments.length, i = new Array(1 < n ? n - 1 : 0), r = 1; r < n; r++) i[r - 1] = arguments[r];\n\n        var o,\n            a = _createForOfIteratorHelper(t);\n\n        try {\n          for (a.s(); !(o = a.n()).done;) {\n            o.value.apply(this, i);\n          }\n        } catch (e) {\n          a.e(e);\n        } finally {\n          a.f();\n        }\n      }\n\n      return this;\n    }\n  }, {\n    key: \"off\",\n    value: function (e, t) {\n      if (!this._callbacks || 0 === arguments.length) return this._callbacks = {}, this;\n      var n = this._callbacks[e];\n      if (!n) return this;\n      if (1 === arguments.length) return delete this._callbacks[e], this;\n\n      for (var i = 0; i < n.length; i++) {\n        if (n[i] === t) {\n          n.splice(i, 1);\n          break;\n        }\n      }\n\n      return this;\n    }\n  }]), e;\n}(),\n    Dropzone = function () {\n  _inherits(b, Emitter);\n\n  var a = _createSuper(b);\n\n  function b(e, t) {\n    var n, i, r;\n    if (_classCallCheck(this, b), (n = a.call(this)).element = e, n.version = b.version, n.defaultOptions.previewTemplate = n.defaultOptions.previewTemplate.replace(/\\n*/g, \"\"), n.clickableElements = [], n.listeners = [], n.files = [], \"string\" == typeof n.element && (n.element = document.querySelector(n.element)), !n.element || null == n.element.nodeType) throw new Error(\"Invalid dropzone element.\");\n    if (n.element.dropzone) throw new Error(\"Dropzone already attached.\");\n    b.instances.push(_assertThisInitialized(n)), n.element.dropzone = _assertThisInitialized(n);\n    var o = null != (r = b.optionsForElement(n.element)) ? r : {};\n    if (n.options = b.extend({}, n.defaultOptions, o, null != t ? t : {}), n.options.forceFallback || !b.isBrowserSupported()) return _possibleConstructorReturn(n, n.options.fallback.call(_assertThisInitialized(n)));\n    if (null == n.options.url && (n.options.url = n.element.getAttribute(\"action\")), !n.options.url) throw new Error(\"No URL provided.\");\n    if (n.options.acceptedFiles && n.options.acceptedMimeTypes) throw new Error(\"You can't provide both 'acceptedFiles' and 'acceptedMimeTypes'. 'acceptedMimeTypes' is deprecated.\");\n    if (n.options.uploadMultiple && n.options.chunking) throw new Error(\"You cannot set both: uploadMultiple and chunking.\");\n    return n.options.acceptedMimeTypes && (n.options.acceptedFiles = n.options.acceptedMimeTypes, delete n.options.acceptedMimeTypes), null != n.options.renameFilename && (n.options.renameFile = function (e) {\n      return n.options.renameFilename.call(_assertThisInitialized(n), e.name, e);\n    }), \"string\" == typeof n.options.method && (n.options.method = n.options.method.toUpperCase()), (i = n.getExistingFallback()) && i.parentNode && i.parentNode.removeChild(i), !1 !== n.options.previewsContainer && (n.options.previewsContainer ? n.previewsContainer = b.getElement(n.options.previewsContainer, \"previewsContainer\") : n.previewsContainer = n.element), n.options.clickable && (!0 === n.options.clickable ? n.clickableElements = [n.element] : n.clickableElements = b.getElements(n.options.clickable, \"clickable\")), n.init(), n;\n  }\n\n  return _createClass(b, null, [{\n    key: \"initClass\",\n    value: function () {\n      this.prototype.Emitter = Emitter, this.prototype.events = [\"drop\", \"dragstart\", \"dragend\", \"dragenter\", \"dragover\", \"dragleave\", \"addedfile\", \"addedfiles\", \"removedfile\", \"thumbnail\", \"error\", \"errormultiple\", \"processing\", \"processingmultiple\", \"uploadprogress\", \"totaluploadprogress\", \"sending\", \"sendingmultiple\", \"success\", \"successmultiple\", \"canceled\", \"canceledmultiple\", \"complete\", \"completemultiple\", \"reset\", \"maxfilesexceeded\", \"maxfilesreached\", \"queuecomplete\"], this.prototype.defaultOptions = {\n        url: null,\n        method: \"post\",\n        withCredentials: !1,\n        timeout: 3e4,\n        parallelUploads: 2,\n        uploadMultiple: !1,\n        chunking: !1,\n        forceChunking: !1,\n        chunkSize: 2e6,\n        parallelChunkUploads: !1,\n        retryChunks: !1,\n        retryChunksLimit: 3,\n        maxFilesize: 256,\n        paramName: \"file\",\n        createImageThumbnails: !0,\n        maxThumbnailFilesize: 10,\n        thumbnailWidth: 120,\n        thumbnailHeight: 120,\n        thumbnailMethod: \"crop\",\n        resizeWidth: null,\n        resizeHeight: null,\n        resizeMimeType: null,\n        resizeQuality: .8,\n        resizeMethod: \"contain\",\n        filesizeBase: 1e3,\n        maxFiles: null,\n        headers: null,\n        clickable: !0,\n        ignoreHiddenFiles: !0,\n        acceptedFiles: null,\n        acceptedMimeTypes: null,\n        autoProcessQueue: !0,\n        autoQueue: !0,\n        addRemoveLinks: !1,\n        previewsContainer: null,\n        hiddenInputContainer: \"body\",\n        capture: null,\n        renameFilename: null,\n        renameFile: null,\n        forceFallback: !1,\n        dictDefaultMessage: \"Drop files here to upload\",\n        dictFallbackMessage: \"Your browser does not support drag'n'drop file uploads.\",\n        dictFallbackText: \"Please use the fallback form below to upload your files like in the olden days.\",\n        dictFileTooBig: \"File is too big ({{filesize}}MiB). Max filesize: {{maxFilesize}}MiB.\",\n        dictInvalidFileType: \"You can't upload files of this type.\",\n        dictResponseError: \"Server responded with {{statusCode}} code.\",\n        dictCancelUpload: \"Cancel upload\",\n        dictUploadCanceled: \"Upload canceled.\",\n        dictCancelUploadConfirmation: \"Are you sure you want to cancel this upload?\",\n        dictRemoveFile: \"Remove file\",\n        dictRemoveFileConfirmation: null,\n        dictMaxFilesExceeded: \"You can not upload any more files.\",\n        dictFileSizeUnits: {\n          tb: \"TB\",\n          gb: \"GB\",\n          mb: \"MB\",\n          kb: \"KB\",\n          b: \"b\"\n        },\n        init: function () {},\n        params: function (e, t, n) {\n          if (n) return {\n            dzuuid: n.file.upload.uuid,\n            dzchunkindex: n.index,\n            dztotalfilesize: n.file.size,\n            dzchunksize: this.options.chunkSize,\n            dztotalchunkcount: n.file.upload.totalChunkCount,\n            dzchunkbyteoffset: n.index * this.options.chunkSize\n          };\n        },\n        accept: function (e, t) {\n          return t();\n        },\n        chunksUploaded: function (e, t) {\n          t();\n        },\n        fallback: function () {\n          var e;\n          this.element.className = \"\".concat(this.element.className, \" dz-browser-not-supported\");\n\n          var t,\n              n = _createForOfIteratorHelper(this.element.getElementsByTagName(\"div\"));\n\n          try {\n            for (n.s(); !(t = n.n()).done;) {\n              var i = t.value;\n\n              if (/(^| )dz-message($| )/.test(i.className)) {\n                (e = i).className = \"dz-message\";\n                break;\n              }\n            }\n          } catch (e) {\n            n.e(e);\n          } finally {\n            n.f();\n          }\n\n          e || (e = b.createElement('<div class=\"dz-message\"><span></span></div>'), this.element.appendChild(e));\n          var r = e.getElementsByTagName(\"span\")[0];\n          return r && (null != r.textContent ? r.textContent = this.options.dictFallbackMessage : null != r.innerText && (r.innerText = this.options.dictFallbackMessage)), this.element.appendChild(this.getFallbackForm());\n        },\n        resize: function (e, t, n, i) {\n          var r = {\n            srcX: 0,\n            srcY: 0,\n            srcWidth: e.width,\n            srcHeight: e.height\n          },\n              o = e.width / e.height;\n          null == t && null == n ? (t = r.srcWidth, n = r.srcHeight) : null == t ? t = n * o : null == n && (n = t / o);\n          var a = (t = Math.min(t, r.srcWidth)) / (n = Math.min(n, r.srcHeight));\n          if (r.srcWidth > t || r.srcHeight > n) if (\"crop\" === i) a < o ? (r.srcHeight = e.height, r.srcWidth = r.srcHeight * a) : (r.srcWidth = e.width, r.srcHeight = r.srcWidth / a);else {\n            if (\"contain\" !== i) throw new Error(\"Unknown resizeMethod '\".concat(i, \"'\"));\n            a < o ? n = t / o : t = n * o;\n          }\n          return r.srcX = (e.width - r.srcWidth) / 2, r.srcY = (e.height - r.srcHeight) / 2, r.trgWidth = t, r.trgHeight = n, r;\n        },\n        transformFile: function (e, t) {\n          return (this.options.resizeWidth || this.options.resizeHeight) && e.type.match(/image.*/) ? this.resizeImage(e, this.options.resizeWidth, this.options.resizeHeight, this.options.resizeMethod, t) : t(e);\n        },\n        previewTemplate: '<div class=\"dz-preview dz-file-preview\">\\n  <div class=\"dz-image\"><img data-dz-thumbnail /></div>\\n  <div class=\"dz-details\">\\n    <div class=\"dz-size\"><span data-dz-size></span></div>\\n    <div class=\"dz-filename\"><span data-dz-name></span></div>\\n  </div>\\n  <div class=\"dz-progress\"><span class=\"dz-upload\" data-dz-uploadprogress></span></div>\\n  <div class=\"dz-error-message\"><span data-dz-errormessage></span></div>\\n  <div class=\"dz-success-mark\">\\n    <svg width=\"54px\" height=\"54px\" viewBox=\"0 0 54 54\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\\n      <title>Check</title>\\n      <g stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\\n        <path d=\"M23.5,31.8431458 L17.5852419,25.9283877 C16.0248253,24.3679711 13.4910294,24.366835 11.9289322,25.9289322 C10.3700136,27.4878508 10.3665912,30.0234455 11.9283877,31.5852419 L20.4147581,40.0716123 C20.5133999,40.1702541 20.6159315,40.2626649 20.7218615,40.3488435 C22.2835669,41.8725651 24.794234,41.8626202 26.3461564,40.3106978 L43.3106978,23.3461564 C44.8771021,21.7797521 44.8758057,19.2483887 43.3137085,17.6862915 C41.7547899,16.1273729 39.2176035,16.1255422 37.6538436,17.6893022 L23.5,31.8431458 Z M27,53 C41.3594035,53 53,41.3594035 53,27 C53,12.6405965 41.3594035,1 27,1 C12.6405965,1 1,12.6405965 1,27 C1,41.3594035 12.6405965,53 27,53 Z\" stroke-opacity=\"0.198794158\" stroke=\"#747474\" fill-opacity=\"0.816519475\" fill=\"#FFFFFF\"></path>\\n      </g>\\n    </svg>\\n  </div>\\n  <div class=\"dz-error-mark\">\\n    <svg width=\"54px\" height=\"54px\" viewBox=\"0 0 54 54\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\\n      <title>Error</title>\\n      <g stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\\n        <g stroke=\"#747474\" stroke-opacity=\"0.198794158\" fill=\"#FFFFFF\" fill-opacity=\"0.816519475\">\\n          <path d=\"M32.6568542,29 L38.3106978,23.3461564 C39.8771021,21.7797521 39.8758057,19.2483887 38.3137085,17.6862915 C36.7547899,16.1273729 34.2176035,16.1255422 32.6538436,17.6893022 L27,23.3431458 L21.3461564,17.6893022 C19.7823965,16.1255422 17.2452101,16.1273729 15.6862915,17.6862915 C14.1241943,19.2483887 14.1228979,21.7797521 15.6893022,23.3461564 L21.3431458,29 L15.6893022,34.6538436 C14.1228979,36.2202479 14.1241943,38.7516113 15.6862915,40.3137085 C17.2452101,41.8726271 19.7823965,41.8744578 21.3461564,40.3106978 L27,34.6568542 L32.6538436,40.3106978 C34.2176035,41.8744578 36.7547899,41.8726271 38.3137085,40.3137085 C39.8758057,38.7516113 39.8771021,36.2202479 38.3106978,34.6538436 L32.6568542,29 Z M27,53 C41.3594035,53 53,41.3594035 53,27 C53,12.6405965 41.3594035,1 27,1 C12.6405965,1 1,12.6405965 1,27 C1,41.3594035 12.6405965,53 27,53 Z\"></path>\\n        </g>\\n      </g>\\n    </svg>\\n  </div>\\n</div>',\n        drop: function () {\n          return this.element.classList.remove(\"dz-drag-hover\");\n        },\n        dragstart: function () {},\n        dragend: function () {\n          return this.element.classList.remove(\"dz-drag-hover\");\n        },\n        dragenter: function () {\n          return this.element.classList.add(\"dz-drag-hover\");\n        },\n        dragover: function () {\n          return this.element.classList.add(\"dz-drag-hover\");\n        },\n        dragleave: function () {\n          return this.element.classList.remove(\"dz-drag-hover\");\n        },\n        paste: function () {},\n        reset: function () {\n          return this.element.classList.remove(\"dz-started\");\n        },\n        addedfile: function (t) {\n          var n = this;\n\n          if (this.element === this.previewsContainer && this.element.classList.add(\"dz-started\"), this.previewsContainer) {\n            t.previewElement = b.createElement(this.options.previewTemplate.trim()), t.previewTemplate = t.previewElement, this.previewsContainer.appendChild(t.previewElement);\n\n            var e,\n                i = _createForOfIteratorHelper(t.previewElement.querySelectorAll(\"[data-dz-name]\"));\n\n            try {\n              for (i.s(); !(e = i.n()).done;) {\n                var r = e.value;\n                r.textContent = t.name;\n              }\n            } catch (e) {\n              i.e(e);\n            } finally {\n              i.f();\n            }\n\n            var o,\n                a = _createForOfIteratorHelper(t.previewElement.querySelectorAll(\"[data-dz-size]\"));\n\n            try {\n              for (a.s(); !(o = a.n()).done;) (r = o.value).innerHTML = this.filesize(t.size);\n            } catch (e) {\n              a.e(e);\n            } finally {\n              a.f();\n            }\n\n            this.options.addRemoveLinks && (t._removeLink = b.createElement('<a class=\"dz-remove\" href=\"javascript:undefined;\" data-dz-remove>'.concat(this.options.dictRemoveFile, \"</a>\")), t.previewElement.appendChild(t._removeLink));\n\n            var l,\n                s = function (e) {\n              return e.preventDefault(), e.stopPropagation(), t.status === b.UPLOADING ? b.confirm(n.options.dictCancelUploadConfirmation, function () {\n                return n.removeFile(t);\n              }) : n.options.dictRemoveFileConfirmation ? b.confirm(n.options.dictRemoveFileConfirmation, function () {\n                return n.removeFile(t);\n              }) : n.removeFile(t);\n            },\n                u = _createForOfIteratorHelper(t.previewElement.querySelectorAll(\"[data-dz-remove]\"));\n\n            try {\n              for (u.s(); !(l = u.n()).done;) {\n                l.value.addEventListener(\"click\", s);\n              }\n            } catch (e) {\n              u.e(e);\n            } finally {\n              u.f();\n            }\n          }\n        },\n        removedfile: function (e) {\n          return null != e.previewElement && null != e.previewElement.parentNode && e.previewElement.parentNode.removeChild(e.previewElement), this._updateMaxFilesReachedClass();\n        },\n        thumbnail: function (e, t) {\n          if (e.previewElement) {\n            e.previewElement.classList.remove(\"dz-file-preview\");\n\n            var n,\n                i = _createForOfIteratorHelper(e.previewElement.querySelectorAll(\"[data-dz-thumbnail]\"));\n\n            try {\n              for (i.s(); !(n = i.n()).done;) {\n                var r = n.value;\n                r.alt = e.name, r.src = t;\n              }\n            } catch (e) {\n              i.e(e);\n            } finally {\n              i.f();\n            }\n\n            return setTimeout(function () {\n              return e.previewElement.classList.add(\"dz-image-preview\");\n            }, 1);\n          }\n        },\n        error: function (e, t) {\n          if (e.previewElement) {\n            e.previewElement.classList.add(\"dz-error\"), \"string\" != typeof t && t.error && (t = t.error);\n\n            var n,\n                i = _createForOfIteratorHelper(e.previewElement.querySelectorAll(\"[data-dz-errormessage]\"));\n\n            try {\n              for (i.s(); !(n = i.n()).done;) {\n                n.value.textContent = t;\n              }\n            } catch (e) {\n              i.e(e);\n            } finally {\n              i.f();\n            }\n          }\n        },\n        errormultiple: function () {},\n        processing: function (e) {\n          if (e.previewElement && (e.previewElement.classList.add(\"dz-processing\"), e._removeLink)) return e._removeLink.innerHTML = this.options.dictCancelUpload;\n        },\n        processingmultiple: function () {},\n        uploadprogress: function (e, t) {\n          if (e.previewElement) {\n            var n,\n                i = _createForOfIteratorHelper(e.previewElement.querySelectorAll(\"[data-dz-uploadprogress]\"));\n\n            try {\n              for (i.s(); !(n = i.n()).done;) {\n                var r = n.value;\n                \"PROGRESS\" === r.nodeName ? r.value = t : r.style.width = \"\".concat(t, \"%\");\n              }\n            } catch (e) {\n              i.e(e);\n            } finally {\n              i.f();\n            }\n          }\n        },\n        totaluploadprogress: function () {},\n        sending: function () {},\n        sendingmultiple: function () {},\n        success: function (e) {\n          if (e.previewElement) return e.previewElement.classList.add(\"dz-success\");\n        },\n        successmultiple: function () {},\n        canceled: function (e) {\n          return this.emit(\"error\", e, this.options.dictUploadCanceled);\n        },\n        canceledmultiple: function () {},\n        complete: function (e) {\n          if (e._removeLink && (e._removeLink.innerHTML = this.options.dictRemoveFile), e.previewElement) return e.previewElement.classList.add(\"dz-complete\");\n        },\n        completemultiple: function () {},\n        maxfilesexceeded: function () {},\n        maxfilesreached: function () {},\n        queuecomplete: function () {},\n        addedfiles: function () {}\n      }, this.prototype._thumbnailQueue = [], this.prototype._processingThumbnail = !1;\n    }\n  }, {\n    key: \"extend\",\n    value: function (e) {\n      for (var t = arguments.length, n = new Array(1 < t ? t - 1 : 0), i = 1; i < t; i++) n[i - 1] = arguments[i];\n\n      for (var r = 0, o = n; r < o.length; r++) {\n        var a = o[r];\n\n        for (var l in a) {\n          var s = a[l];\n          e[l] = s;\n        }\n      }\n\n      return e;\n    }\n  }]), _createClass(b, [{\n    key: \"getAcceptedFiles\",\n    value: function () {\n      return this.files.filter(function (e) {\n        return e.accepted;\n      }).map(function (e) {\n        return e;\n      });\n    }\n  }, {\n    key: \"getRejectedFiles\",\n    value: function () {\n      return this.files.filter(function (e) {\n        return !e.accepted;\n      }).map(function (e) {\n        return e;\n      });\n    }\n  }, {\n    key: \"getFilesWithStatus\",\n    value: function (t) {\n      return this.files.filter(function (e) {\n        return e.status === t;\n      }).map(function (e) {\n        return e;\n      });\n    }\n  }, {\n    key: \"getQueuedFiles\",\n    value: function () {\n      return this.getFilesWithStatus(b.QUEUED);\n    }\n  }, {\n    key: \"getUploadingFiles\",\n    value: function () {\n      return this.getFilesWithStatus(b.UPLOADING);\n    }\n  }, {\n    key: \"getAddedFiles\",\n    value: function () {\n      return this.getFilesWithStatus(b.ADDED);\n    }\n  }, {\n    key: \"getActiveFiles\",\n    value: function () {\n      return this.files.filter(function (e) {\n        return e.status === b.UPLOADING || e.status === b.QUEUED;\n      }).map(function (e) {\n        return e;\n      });\n    }\n  }, {\n    key: \"init\",\n    value: function () {\n      var o = this;\n\n      if (\"form\" === this.element.tagName && this.element.setAttribute(\"enctype\", \"multipart/form-data\"), this.element.classList.contains(\"dropzone\") && !this.element.querySelector(\".dz-message\") && this.element.appendChild(b.createElement('<div class=\"dz-default dz-message\"><button class=\"dz-button\" type=\"button\">'.concat(this.options.dictDefaultMessage, \"</button></div>\"))), this.clickableElements.length) {\n        !function r() {\n          return o.hiddenFileInput && o.hiddenFileInput.parentNode.removeChild(o.hiddenFileInput), o.hiddenFileInput = document.createElement(\"input\"), o.hiddenFileInput.setAttribute(\"type\", \"file\"), (null === o.options.maxFiles || 1 < o.options.maxFiles) && o.hiddenFileInput.setAttribute(\"multiple\", \"multiple\"), o.hiddenFileInput.className = \"dz-hidden-input\", null !== o.options.acceptedFiles && o.hiddenFileInput.setAttribute(\"accept\", o.options.acceptedFiles), null !== o.options.capture && o.hiddenFileInput.setAttribute(\"capture\", o.options.capture), o.hiddenFileInput.style.visibility = \"hidden\", o.hiddenFileInput.style.position = \"absolute\", o.hiddenFileInput.style.top = \"0\", o.hiddenFileInput.style.left = \"0\", o.hiddenFileInput.style.height = \"0\", o.hiddenFileInput.style.width = \"0\", b.getElement(o.options.hiddenInputContainer, \"hiddenInputContainer\").appendChild(o.hiddenFileInput), o.hiddenFileInput.addEventListener(\"change\", function () {\n            var e = o.hiddenFileInput.files;\n\n            if (e.length) {\n              var t,\n                  n = _createForOfIteratorHelper(e);\n\n              try {\n                for (n.s(); !(t = n.n()).done;) {\n                  var i = t.value;\n                  o.addFile(i);\n                }\n              } catch (e) {\n                n.e(e);\n              } finally {\n                n.f();\n              }\n            }\n\n            return o.emit(\"addedfiles\", e), r();\n          });\n        }();\n      }\n\n      this.URL = null !== window.URL ? window.URL : window.webkitURL;\n\n      var e,\n          t = _createForOfIteratorHelper(this.events);\n\n      try {\n        for (t.s(); !(e = t.n()).done;) {\n          var n = e.value;\n          this.on(n, this.options[n]);\n        }\n      } catch (e) {\n        t.e(e);\n      } finally {\n        t.f();\n      }\n\n      this.on(\"uploadprogress\", function () {\n        return o.updateTotalUploadProgress();\n      }), this.on(\"removedfile\", function () {\n        return o.updateTotalUploadProgress();\n      }), this.on(\"canceled\", function (e) {\n        return o.emit(\"complete\", e);\n      }), this.on(\"complete\", function (e) {\n        if (0 === o.getAddedFiles().length && 0 === o.getUploadingFiles().length && 0 === o.getQueuedFiles().length) return setTimeout(function () {\n          return o.emit(\"queuecomplete\");\n        }, 0);\n      });\n\n      function i(e) {\n        return function (e) {\n          if (e.dataTransfer.types) for (var t = 0; t < e.dataTransfer.types.length; t++) if (\"Files\" === e.dataTransfer.types[t]) return !0;\n          return !1;\n        }(e) && (e.stopPropagation(), e.preventDefault ? e.preventDefault() : e.returnValue = !1);\n      }\n\n      return this.listeners = [{\n        element: this.element,\n        events: {\n          dragstart: function (e) {\n            return o.emit(\"dragstart\", e);\n          },\n          dragenter: function (e) {\n            return i(e), o.emit(\"dragenter\", e);\n          },\n          dragover: function (e) {\n            var t;\n\n            try {\n              t = e.dataTransfer.effectAllowed;\n            } catch (e) {}\n\n            return e.dataTransfer.dropEffect = \"move\" === t || \"linkMove\" === t ? \"move\" : \"copy\", i(e), o.emit(\"dragover\", e);\n          },\n          dragleave: function (e) {\n            return o.emit(\"dragleave\", e);\n          },\n          drop: function (e) {\n            return i(e), o.drop(e);\n          },\n          dragend: function (e) {\n            return o.emit(\"dragend\", e);\n          }\n        }\n      }], this.clickableElements.forEach(function (t) {\n        return o.listeners.push({\n          element: t,\n          events: {\n            click: function (e) {\n              return t === o.element && e.target !== o.element && !b.elementInside(e.target, o.element.querySelector(\".dz-message\")) || o.hiddenFileInput.click(), !0;\n            }\n          }\n        });\n      }), this.enable(), this.options.init.call(this);\n    }\n  }, {\n    key: \"destroy\",\n    value: function () {\n      return this.disable(), this.removeAllFiles(!0), null != this.hiddenFileInput && this.hiddenFileInput.parentNode && (this.hiddenFileInput.parentNode.removeChild(this.hiddenFileInput), this.hiddenFileInput = null), delete this.element.dropzone, b.instances.splice(b.instances.indexOf(this), 1);\n    }\n  }, {\n    key: \"updateTotalUploadProgress\",\n    value: function () {\n      var e,\n          t = 0,\n          n = 0;\n\n      if (this.getActiveFiles().length) {\n        var i,\n            r = _createForOfIteratorHelper(this.getActiveFiles());\n\n        try {\n          for (r.s(); !(i = r.n()).done;) {\n            var o = i.value;\n            t += o.upload.bytesSent, n += o.upload.total;\n          }\n        } catch (e) {\n          r.e(e);\n        } finally {\n          r.f();\n        }\n\n        e = 100 * t / n;\n      } else e = 100;\n\n      return this.emit(\"totaluploadprogress\", e, n, t);\n    }\n  }, {\n    key: \"_getParamName\",\n    value: function (e) {\n      return \"function\" == typeof this.options.paramName ? this.options.paramName(e) : \"\".concat(this.options.paramName).concat(this.options.uploadMultiple ? \"[\".concat(e, \"]\") : \"\");\n    }\n  }, {\n    key: \"_renameFile\",\n    value: function (e) {\n      return \"function\" != typeof this.options.renameFile ? e.name : this.options.renameFile(e);\n    }\n  }, {\n    key: \"getFallbackForm\",\n    value: function () {\n      var e, t;\n      if (e = this.getExistingFallback()) return e;\n      var n = '<div class=\"dz-fallback\">';\n      this.options.dictFallbackText && (n += \"<p>\".concat(this.options.dictFallbackText, \"</p>\")), n += '<input type=\"file\" name=\"'.concat(this._getParamName(0), '\" ').concat(this.options.uploadMultiple ? 'multiple=\"multiple\"' : void 0, ' /><input type=\"submit\" value=\"Upload!\"></div>');\n      var i = b.createElement(n);\n      return \"FORM\" !== this.element.tagName ? (t = b.createElement('<form action=\"'.concat(this.options.url, '\" enctype=\"multipart/form-data\" method=\"').concat(this.options.method, '\"></form>'))).appendChild(i) : (this.element.setAttribute(\"enctype\", \"multipart/form-data\"), this.element.setAttribute(\"method\", this.options.method)), null != t ? t : i;\n    }\n  }, {\n    key: \"getExistingFallback\",\n    value: function () {\n      for (var e = function (e) {\n        var t,\n            n = _createForOfIteratorHelper(e);\n\n        try {\n          for (n.s(); !(t = n.n()).done;) {\n            var i = t.value;\n            if (/(^| )fallback($| )/.test(i.className)) return i;\n          }\n        } catch (e) {\n          n.e(e);\n        } finally {\n          n.f();\n        }\n      }, t = 0, n = [\"div\", \"form\"]; t < n.length; t++) {\n        var i,\n            r = n[t];\n        if (i = e(this.element.getElementsByTagName(r))) return i;\n      }\n    }\n  }, {\n    key: \"setupEventListeners\",\n    value: function () {\n      return this.listeners.map(function (i) {\n        return function () {\n          var e = [];\n\n          for (var t in i.events) {\n            var n = i.events[t];\n            e.push(i.element.addEventListener(t, n, !1));\n          }\n\n          return e;\n        }();\n      });\n    }\n  }, {\n    key: \"removeEventListeners\",\n    value: function () {\n      return this.listeners.map(function (i) {\n        return function () {\n          var e = [];\n\n          for (var t in i.events) {\n            var n = i.events[t];\n            e.push(i.element.removeEventListener(t, n, !1));\n          }\n\n          return e;\n        }();\n      });\n    }\n  }, {\n    key: \"disable\",\n    value: function () {\n      var t = this;\n      return this.clickableElements.forEach(function (e) {\n        return e.classList.remove(\"dz-clickable\");\n      }), this.removeEventListeners(), this.disabled = !0, this.files.map(function (e) {\n        return t.cancelUpload(e);\n      });\n    }\n  }, {\n    key: \"enable\",\n    value: function () {\n      return delete this.disabled, this.clickableElements.forEach(function (e) {\n        return e.classList.add(\"dz-clickable\");\n      }), this.setupEventListeners();\n    }\n  }, {\n    key: \"filesize\",\n    value: function (e) {\n      var t = 0,\n          n = \"b\";\n\n      if (0 < e) {\n        for (var i = [\"tb\", \"gb\", \"mb\", \"kb\", \"b\"], r = 0; r < i.length; r++) {\n          var o = i[r];\n\n          if (Math.pow(this.options.filesizeBase, 4 - r) / 10 <= e) {\n            t = e / Math.pow(this.options.filesizeBase, 4 - r), n = o;\n            break;\n          }\n        }\n\n        t = Math.round(10 * t) / 10;\n      }\n\n      return \"<strong>\".concat(t, \"</strong> \").concat(this.options.dictFileSizeUnits[n]);\n    }\n  }, {\n    key: \"_updateMaxFilesReachedClass\",\n    value: function () {\n      return null != this.options.maxFiles && this.getAcceptedFiles().length >= this.options.maxFiles ? (this.getAcceptedFiles().length === this.options.maxFiles && this.emit(\"maxfilesreached\", this.files), this.element.classList.add(\"dz-max-files-reached\")) : this.element.classList.remove(\"dz-max-files-reached\");\n    }\n  }, {\n    key: \"drop\",\n    value: function (e) {\n      if (e.dataTransfer) {\n        this.emit(\"drop\", e);\n\n        for (var t = [], n = 0; n < e.dataTransfer.files.length; n++) t[n] = e.dataTransfer.files[n];\n\n        if (t.length) {\n          var i = e.dataTransfer.items;\n          i && i.length && null != i[0].webkitGetAsEntry ? this._addFilesFromItems(i) : this.handleFiles(t);\n        }\n\n        this.emit(\"addedfiles\", t);\n      }\n    }\n  }, {\n    key: \"paste\",\n    value: function (e) {\n      if (null != __guard__(null != e ? e.clipboardData : void 0, function (e) {\n        return e.items;\n      })) {\n        this.emit(\"paste\", e);\n        var t = e.clipboardData.items;\n        return t.length ? this._addFilesFromItems(t) : void 0;\n      }\n    }\n  }, {\n    key: \"handleFiles\",\n    value: function (e) {\n      var t,\n          n = _createForOfIteratorHelper(e);\n\n      try {\n        for (n.s(); !(t = n.n()).done;) {\n          var i = t.value;\n          this.addFile(i);\n        }\n      } catch (e) {\n        n.e(e);\n      } finally {\n        n.f();\n      }\n    }\n  }, {\n    key: \"_addFilesFromItems\",\n    value: function (o) {\n      var a = this;\n      return function () {\n        var e,\n            t = [],\n            n = _createForOfIteratorHelper(o);\n\n        try {\n          for (n.s(); !(e = n.n()).done;) {\n            var i,\n                r = e.value;\n            null != r.webkitGetAsEntry && (i = r.webkitGetAsEntry()) ? i.isFile ? t.push(a.addFile(r.getAsFile())) : i.isDirectory ? t.push(a._addFilesFromDirectory(i, i.name)) : t.push(void 0) : null != r.getAsFile && (null == r.kind || \"file\" === r.kind) ? t.push(a.addFile(r.getAsFile())) : t.push(void 0);\n          }\n        } catch (e) {\n          n.e(e);\n        } finally {\n          n.f();\n        }\n\n        return t;\n      }();\n    }\n  }, {\n    key: \"_addFilesFromDirectory\",\n    value: function (e, o) {\n      function t(t) {\n        return __guardMethod__(console, \"log\", function (e) {\n          return e.log(t);\n        });\n      }\n\n      var a = this,\n          n = e.createReader();\n      return function r() {\n        return n.readEntries(function (e) {\n          if (0 < e.length) {\n            var t,\n                n = _createForOfIteratorHelper(e);\n\n            try {\n              for (n.s(); !(t = n.n()).done;) {\n                var i = t.value;\n                i.isFile ? i.file(function (e) {\n                  if (!a.options.ignoreHiddenFiles || \".\" !== e.name.substring(0, 1)) return e.fullPath = \"\".concat(o, \"/\").concat(e.name), a.addFile(e);\n                }) : i.isDirectory && a._addFilesFromDirectory(i, \"\".concat(o, \"/\").concat(i.name));\n              }\n            } catch (e) {\n              n.e(e);\n            } finally {\n              n.f();\n            }\n\n            r();\n          }\n\n          return null;\n        }, t);\n      }();\n    }\n  }, {\n    key: \"accept\",\n    value: function (e, t) {\n      this.options.maxFilesize && e.size > 1024 * this.options.maxFilesize * 1024 ? t(this.options.dictFileTooBig.replace(\"{{filesize}}\", Math.round(e.size / 1024 / 10.24) / 100).replace(\"{{maxFilesize}}\", this.options.maxFilesize)) : b.isValidFile(e, this.options.acceptedFiles) ? null != this.options.maxFiles && this.getAcceptedFiles().length >= this.options.maxFiles ? (t(this.options.dictMaxFilesExceeded.replace(\"{{maxFiles}}\", this.options.maxFiles)), this.emit(\"maxfilesexceeded\", e)) : this.options.accept.call(this, e, t) : t(this.options.dictInvalidFileType);\n    }\n  }, {\n    key: \"addFile\",\n    value: function (t) {\n      var n = this;\n      t.upload = {\n        uuid: b.uuidv4(),\n        progress: 0,\n        total: t.size,\n        bytesSent: 0,\n        filename: this._renameFile(t)\n      }, this.files.push(t), t.status = b.ADDED, this.emit(\"addedfile\", t), this._enqueueThumbnail(t), this.accept(t, function (e) {\n        e ? (t.accepted = !1, n._errorProcessing([t], e)) : (t.accepted = !0, n.options.autoQueue && n.enqueueFile(t)), n._updateMaxFilesReachedClass();\n      });\n    }\n  }, {\n    key: \"enqueueFiles\",\n    value: function (e) {\n      var t,\n          n = _createForOfIteratorHelper(e);\n\n      try {\n        for (n.s(); !(t = n.n()).done;) {\n          var i = t.value;\n          this.enqueueFile(i);\n        }\n      } catch (e) {\n        n.e(e);\n      } finally {\n        n.f();\n      }\n\n      return null;\n    }\n  }, {\n    key: \"enqueueFile\",\n    value: function (e) {\n      var t = this;\n      if (e.status !== b.ADDED || !0 !== e.accepted) throw new Error(\"This file can't be queued because it has already been processed or was rejected.\");\n      if (e.status = b.QUEUED, this.options.autoProcessQueue) return setTimeout(function () {\n        return t.processQueue();\n      }, 0);\n    }\n  }, {\n    key: \"_enqueueThumbnail\",\n    value: function (e) {\n      var t = this;\n      if (this.options.createImageThumbnails && e.type.match(/image.*/) && e.size <= 1024 * this.options.maxThumbnailFilesize * 1024) return this._thumbnailQueue.push(e), setTimeout(function () {\n        return t._processThumbnailQueue();\n      }, 0);\n    }\n  }, {\n    key: \"_processThumbnailQueue\",\n    value: function () {\n      var t = this;\n\n      if (!this._processingThumbnail && 0 !== this._thumbnailQueue.length) {\n        this._processingThumbnail = !0;\n\n        var n = this._thumbnailQueue.shift();\n\n        return this.createThumbnail(n, this.options.thumbnailWidth, this.options.thumbnailHeight, this.options.thumbnailMethod, !0, function (e) {\n          return t.emit(\"thumbnail\", n, e), t._processingThumbnail = !1, t._processThumbnailQueue();\n        });\n      }\n    }\n  }, {\n    key: \"removeFile\",\n    value: function (e) {\n      if (e.status === b.UPLOADING && this.cancelUpload(e), this.files = without(this.files, e), this.emit(\"removedfile\", e), 0 === this.files.length) return this.emit(\"reset\");\n    }\n  }, {\n    key: \"removeAllFiles\",\n    value: function (e) {\n      null == e && (e = !1);\n\n      var t,\n          n = _createForOfIteratorHelper(this.files.slice());\n\n      try {\n        for (n.s(); !(t = n.n()).done;) {\n          var i = t.value;\n          i.status === b.UPLOADING && !e || this.removeFile(i);\n        }\n      } catch (e) {\n        n.e(e);\n      } finally {\n        n.f();\n      }\n\n      return null;\n    }\n  }, {\n    key: \"resizeImage\",\n    value: function (r, e, t, n, o) {\n      var a = this;\n      return this.createThumbnail(r, e, t, n, !0, function (e, t) {\n        if (null == t) return o(r);\n        var n = a.options.resizeMimeType;\n        null == n && (n = r.type);\n        var i = t.toDataURL(n, a.options.resizeQuality);\n        return \"image/jpeg\" !== n && \"image/jpg\" !== n || (i = ExifRestore.restore(r.dataURL, i)), o(b.dataURItoBlob(i));\n      });\n    }\n  }, {\n    key: \"createThumbnail\",\n    value: function (e, t, n, i, r, o) {\n      var a = this,\n          l = new FileReader();\n      l.onload = function () {\n        e.dataURL = l.result, \"image/svg+xml\" !== e.type ? a.createThumbnailFromUrl(e, t, n, i, r, o) : null != o && o(l.result);\n      }, l.readAsDataURL(e);\n    }\n  }, {\n    key: \"displayExistingFile\",\n    value: function (t, e, n, i, r) {\n      var o = this,\n          a = !(4 < arguments.length && void 0 !== r) || r;\n\n      if (this.emit(\"addedfile\", t), this.emit(\"complete\", t), a) {\n        t.dataURL = e, this.createThumbnailFromUrl(t, this.options.thumbnailWidth, this.options.thumbnailHeight, this.options.resizeMethod, this.options.fixOrientation, function (e) {\n          o.emit(\"thumbnail\", t, e), n && n();\n        }, i);\n      } else this.emit(\"thumbnail\", t, e), n && n();\n    }\n  }, {\n    key: \"createThumbnailFromUrl\",\n    value: function (o, a, l, s, t, u, e) {\n      var c = this,\n          d = document.createElement(\"img\");\n      return e && (d.crossOrigin = e), t = \"from-image\" != getComputedStyle(document.body).imageOrientation && t, d.onload = function () {\n        var e = function (e) {\n          return e(1);\n        };\n\n        return \"undefined\" != typeof EXIF && null !== EXIF && t && (e = function (e) {\n          return EXIF.getData(d, function () {\n            return e(EXIF.getTag(this, \"Orientation\"));\n          });\n        }), e(function (e) {\n          o.width = d.width, o.height = d.height;\n          var t = c.options.resize.call(c, o, a, l, s),\n              n = document.createElement(\"canvas\"),\n              i = n.getContext(\"2d\");\n\n          switch (n.width = t.trgWidth, n.height = t.trgHeight, 4 < e && (n.width = t.trgHeight, n.height = t.trgWidth), e) {\n            case 2:\n              i.translate(n.width, 0), i.scale(-1, 1);\n              break;\n\n            case 3:\n              i.translate(n.width, n.height), i.rotate(Math.PI);\n              break;\n\n            case 4:\n              i.translate(0, n.height), i.scale(1, -1);\n              break;\n\n            case 5:\n              i.rotate(.5 * Math.PI), i.scale(1, -1);\n              break;\n\n            case 6:\n              i.rotate(.5 * Math.PI), i.translate(0, -n.width);\n              break;\n\n            case 7:\n              i.rotate(.5 * Math.PI), i.translate(n.height, -n.width), i.scale(-1, 1);\n              break;\n\n            case 8:\n              i.rotate(-.5 * Math.PI), i.translate(-n.height, 0);\n          }\n\n          drawImageIOSFix(i, d, null != t.srcX ? t.srcX : 0, null != t.srcY ? t.srcY : 0, t.srcWidth, t.srcHeight, null != t.trgX ? t.trgX : 0, null != t.trgY ? t.trgY : 0, t.trgWidth, t.trgHeight);\n          var r = n.toDataURL(\"image/png\");\n          if (null != u) return u(r, n);\n        });\n      }, null != u && (d.onerror = u), d.src = o.dataURL;\n    }\n  }, {\n    key: \"processQueue\",\n    value: function () {\n      var e = this.options.parallelUploads,\n          t = this.getUploadingFiles().length,\n          n = t;\n\n      if (!(e <= t)) {\n        var i = this.getQueuedFiles();\n\n        if (0 < i.length) {\n          if (this.options.uploadMultiple) return this.processFiles(i.slice(0, e - t));\n\n          for (; n < e;) {\n            if (!i.length) return;\n            this.processFile(i.shift()), n++;\n          }\n        }\n      }\n    }\n  }, {\n    key: \"processFile\",\n    value: function (e) {\n      return this.processFiles([e]);\n    }\n  }, {\n    key: \"processFiles\",\n    value: function (e) {\n      var t,\n          n = _createForOfIteratorHelper(e);\n\n      try {\n        for (n.s(); !(t = n.n()).done;) {\n          var i = t.value;\n          i.processing = !0, i.status = b.UPLOADING, this.emit(\"processing\", i);\n        }\n      } catch (e) {\n        n.e(e);\n      } finally {\n        n.f();\n      }\n\n      return this.options.uploadMultiple && this.emit(\"processingmultiple\", e), this.uploadFiles(e);\n    }\n  }, {\n    key: \"_getFilesWithXhr\",\n    value: function (t) {\n      return this.files.filter(function (e) {\n        return e.xhr === t;\n      }).map(function (e) {\n        return e;\n      });\n    }\n  }, {\n    key: \"cancelUpload\",\n    value: function (e) {\n      if (e.status === b.UPLOADING) {\n        var t,\n            n = this._getFilesWithXhr(e.xhr),\n            i = _createForOfIteratorHelper(n);\n\n        try {\n          for (i.s(); !(t = i.n()).done;) {\n            t.value.status = b.CANCELED;\n          }\n        } catch (e) {\n          i.e(e);\n        } finally {\n          i.f();\n        }\n\n        void 0 !== e.xhr && e.xhr.abort();\n\n        var r,\n            o = _createForOfIteratorHelper(n);\n\n        try {\n          for (o.s(); !(r = o.n()).done;) {\n            var a = r.value;\n            this.emit(\"canceled\", a);\n          }\n        } catch (e) {\n          o.e(e);\n        } finally {\n          o.f();\n        }\n\n        this.options.uploadMultiple && this.emit(\"canceledmultiple\", n);\n      } else e.status !== b.ADDED && e.status !== b.QUEUED || (e.status = b.CANCELED, this.emit(\"canceled\", e), this.options.uploadMultiple && this.emit(\"canceledmultiple\", [e]));\n\n      if (this.options.autoProcessQueue) return this.processQueue();\n    }\n  }, {\n    key: \"resolveOption\",\n    value: function (e) {\n      if (\"function\" != typeof e) return e;\n\n      for (var t = arguments.length, n = new Array(1 < t ? t - 1 : 0), i = 1; i < t; i++) n[i - 1] = arguments[i];\n\n      return e.apply(this, n);\n    }\n  }, {\n    key: \"uploadFile\",\n    value: function (e) {\n      return this.uploadFiles([e]);\n    }\n  }, {\n    key: \"uploadFiles\",\n    value: function (s) {\n      var u = this;\n\n      this._transformFiles(s, function (e) {\n        if (u.options.chunking) {\n          var t = e[0];\n          s[0].upload.chunked = u.options.chunking && (u.options.forceChunking || t.size > u.options.chunkSize), s[0].upload.totalChunkCount = Math.ceil(t.size / u.options.chunkSize);\n        }\n\n        if (s[0].upload.chunked) {\n          var r = s[0],\n              o = e[0];\n          r.upload.chunks = [];\n\n          var i = function () {\n            for (var e = 0; void 0 !== r.upload.chunks[e];) e++;\n\n            if (!(e >= r.upload.totalChunkCount)) {\n              0;\n              var t = e * u.options.chunkSize,\n                  n = Math.min(t + u.options.chunkSize, o.size),\n                  i = {\n                name: u._getParamName(0),\n                data: o.webkitSlice ? o.webkitSlice(t, n) : o.slice(t, n),\n                filename: r.upload.filename,\n                chunkIndex: e\n              };\n              r.upload.chunks[e] = {\n                file: r,\n                index: e,\n                dataBlock: i,\n                status: b.UPLOADING,\n                progress: 0,\n                retries: 0\n              }, u._uploadData(s, [i]);\n            }\n          };\n\n          if (r.upload.finishedChunkUpload = function (e) {\n            var t = !0;\n            e.status = b.SUCCESS, e.dataBlock = null, e.xhr = null;\n\n            for (var n = 0; n < r.upload.totalChunkCount; n++) {\n              if (void 0 === r.upload.chunks[n]) return i();\n              r.upload.chunks[n].status !== b.SUCCESS && (t = !1);\n            }\n\n            t && u.options.chunksUploaded(r, function () {\n              u._finished(s, \"\", null);\n            });\n          }, u.options.parallelChunkUploads) for (var n = 0; n < r.upload.totalChunkCount; n++) i();else i();\n        } else {\n          for (var a = [], l = 0; l < s.length; l++) a[l] = {\n            name: u._getParamName(l),\n            data: e[l],\n            filename: s[l].upload.filename\n          };\n\n          u._uploadData(s, a);\n        }\n      });\n    }\n  }, {\n    key: \"_getChunk\",\n    value: function (e, t) {\n      for (var n = 0; n < e.upload.totalChunkCount; n++) if (void 0 !== e.upload.chunks[n] && e.upload.chunks[n].xhr === t) return e.upload.chunks[n];\n    }\n  }, {\n    key: \"_uploadData\",\n    value: function (t, e) {\n      var n,\n          i = this,\n          r = new XMLHttpRequest(),\n          o = _createForOfIteratorHelper(t);\n\n      try {\n        for (o.s(); !(n = o.n()).done;) {\n          n.value.xhr = r;\n        }\n      } catch (e) {\n        o.e(e);\n      } finally {\n        o.f();\n      }\n\n      t[0].upload.chunked && (t[0].upload.chunks[e[0].chunkIndex].xhr = r);\n      var a = this.resolveOption(this.options.method, t),\n          l = this.resolveOption(this.options.url, t);\n      r.open(a, l, !0), r.timeout = this.resolveOption(this.options.timeout, t), r.withCredentials = !!this.options.withCredentials, r.onload = function (e) {\n        i._finishedUploading(t, r, e);\n      }, r.ontimeout = function () {\n        i._handleUploadError(t, r, \"Request timedout after \".concat(i.options.timeout / 1e3, \" seconds\"));\n      }, r.onerror = function () {\n        i._handleUploadError(t, r);\n      }, (null != r.upload ? r.upload : r).onprogress = function (e) {\n        return i._updateFilesUploadProgress(t, r, e);\n      };\n      var s = {\n        Accept: \"application/json\",\n        \"Cache-Control\": \"no-cache\",\n        \"X-Requested-With\": \"XMLHttpRequest\"\n      };\n\n      for (var u in this.options.headers && b.extend(s, this.options.headers), s) {\n        var c = s[u];\n        c && r.setRequestHeader(u, c);\n      }\n\n      var d = new FormData();\n\n      if (this.options.params) {\n        var p = this.options.params;\n\n        for (var h in \"function\" == typeof p && (p = p.call(this, t, r, t[0].upload.chunked ? this._getChunk(t[0], r) : null)), p) {\n          var f = p[h];\n          if (Array.isArray(f)) for (var m = 0; m < f.length; m++) d.append(h, f[m]);else d.append(h, f);\n        }\n      }\n\n      var v,\n          g = _createForOfIteratorHelper(t);\n\n      try {\n        for (g.s(); !(v = g.n()).done;) {\n          var y = v.value;\n          this.emit(\"sending\", y, r, d);\n        }\n      } catch (e) {\n        g.e(e);\n      } finally {\n        g.f();\n      }\n\n      this.options.uploadMultiple && this.emit(\"sendingmultiple\", t, r, d), this._addFormElementData(d);\n\n      for (var F = 0; F < e.length; F++) {\n        var k = e[F];\n        d.append(k.name, k.data, k.filename);\n      }\n\n      this.submitRequest(r, d, t);\n    }\n  }, {\n    key: \"_transformFiles\",\n    value: function (n, i) {\n      for (var e = this, r = [], o = 0, t = function (t) {\n        e.options.transformFile.call(e, n[t], function (e) {\n          r[t] = e, ++o === n.length && i(r);\n        });\n      }, a = 0; a < n.length; a++) t(a);\n    }\n  }, {\n    key: \"_addFormElementData\",\n    value: function (e) {\n      if (\"FORM\" === this.element.tagName) {\n        var t,\n            n = _createForOfIteratorHelper(this.element.querySelectorAll(\"input, textarea, select, button\"));\n\n        try {\n          for (n.s(); !(t = n.n()).done;) {\n            var i = t.value,\n                r = i.getAttribute(\"name\"),\n                o = i.getAttribute(\"type\");\n            if (o = o && o.toLowerCase(), null != r) if (\"SELECT\" === i.tagName && i.hasAttribute(\"multiple\")) {\n              var a,\n                  l = _createForOfIteratorHelper(i.options);\n\n              try {\n                for (l.s(); !(a = l.n()).done;) {\n                  var s = a.value;\n                  s.selected && e.append(r, s.value);\n                }\n              } catch (e) {\n                l.e(e);\n              } finally {\n                l.f();\n              }\n            } else (!o || \"checkbox\" !== o && \"radio\" !== o || i.checked) && e.append(r, i.value);\n          }\n        } catch (e) {\n          n.e(e);\n        } finally {\n          n.f();\n        }\n      }\n    }\n  }, {\n    key: \"_updateFilesUploadProgress\",\n    value: function (e, t, n) {\n      var i;\n\n      if (void 0 !== n) {\n        if (i = 100 * n.loaded / n.total, e[0].upload.chunked) {\n          var r = e[0],\n              o = this._getChunk(r, t);\n\n          o.progress = i, o.total = n.total, o.bytesSent = n.loaded;\n          r.upload.progress = 0, r.upload.total = 0;\n\n          for (var a = r.upload.bytesSent = 0; a < r.upload.totalChunkCount; a++) void 0 !== r.upload.chunks[a] && void 0 !== r.upload.chunks[a].progress && (r.upload.progress += r.upload.chunks[a].progress, r.upload.total += r.upload.chunks[a].total, r.upload.bytesSent += r.upload.chunks[a].bytesSent);\n\n          r.upload.progress = r.upload.progress / r.upload.totalChunkCount;\n        } else {\n          var l,\n              s = _createForOfIteratorHelper(e);\n\n          try {\n            for (s.s(); !(l = s.n()).done;) {\n              var u = l.value;\n              u.upload.progress = i, u.upload.total = n.total, u.upload.bytesSent = n.loaded;\n            }\n          } catch (e) {\n            s.e(e);\n          } finally {\n            s.f();\n          }\n        }\n\n        var c,\n            d = _createForOfIteratorHelper(e);\n\n        try {\n          for (d.s(); !(c = d.n()).done;) {\n            var p = c.value;\n            this.emit(\"uploadprogress\", p, p.upload.progress, p.upload.bytesSent);\n          }\n        } catch (e) {\n          d.e(e);\n        } finally {\n          d.f();\n        }\n      } else {\n        var h = !0;\n        i = 100;\n\n        var f,\n            m = _createForOfIteratorHelper(e);\n\n        try {\n          for (m.s(); !(f = m.n()).done;) {\n            var v = f.value;\n            100 === v.upload.progress && v.upload.bytesSent === v.upload.total || (h = !1), v.upload.progress = i, v.upload.bytesSent = v.upload.total;\n          }\n        } catch (e) {\n          m.e(e);\n        } finally {\n          m.f();\n        }\n\n        if (h) return;\n\n        var g,\n            y = _createForOfIteratorHelper(e);\n\n        try {\n          for (y.s(); !(g = y.n()).done;) {\n            var F = g.value;\n            this.emit(\"uploadprogress\", F, i, F.upload.bytesSent);\n          }\n        } catch (e) {\n          y.e(e);\n        } finally {\n          y.f();\n        }\n      }\n    }\n  }, {\n    key: \"_finishedUploading\",\n    value: function (e, t, n) {\n      var i;\n\n      if (e[0].status !== b.CANCELED && 4 === t.readyState) {\n        if (\"arraybuffer\" !== t.responseType && \"blob\" !== t.responseType && (i = t.responseText, t.getResponseHeader(\"content-type\") && ~t.getResponseHeader(\"content-type\").indexOf(\"application/json\"))) try {\n          i = JSON.parse(i);\n        } catch (e) {\n          n = e, i = \"Invalid JSON response from server.\";\n        }\n        this._updateFilesUploadProgress(e), 200 <= t.status && t.status < 300 ? e[0].upload.chunked ? e[0].upload.finishedChunkUpload(this._getChunk(e[0], t)) : this._finished(e, i, n) : this._handleUploadError(e, t, i);\n      }\n    }\n  }, {\n    key: \"_handleUploadError\",\n    value: function (e, t, n) {\n      if (e[0].status !== b.CANCELED) {\n        if (e[0].upload.chunked && this.options.retryChunks) {\n          var i = this._getChunk(e[0], t);\n\n          if (i.retries++ < this.options.retryChunksLimit) return void this._uploadData(e, [i.dataBlock]);\n          console.warn(\"Retried this chunk too often. Giving up.\");\n        }\n\n        this._errorProcessing(e, n || this.options.dictResponseError.replace(\"{{statusCode}}\", t.status), t);\n      }\n    }\n  }, {\n    key: \"submitRequest\",\n    value: function (e, t) {\n      e.send(t);\n    }\n  }, {\n    key: \"_finished\",\n    value: function (e, t, n) {\n      var i,\n          r = _createForOfIteratorHelper(e);\n\n      try {\n        for (r.s(); !(i = r.n()).done;) {\n          var o = i.value;\n          o.status = b.SUCCESS, this.emit(\"success\", o, t, n), this.emit(\"complete\", o);\n        }\n      } catch (e) {\n        r.e(e);\n      } finally {\n        r.f();\n      }\n\n      if (this.options.uploadMultiple && (this.emit(\"successmultiple\", e, t, n), this.emit(\"completemultiple\", e)), this.options.autoProcessQueue) return this.processQueue();\n    }\n  }, {\n    key: \"_errorProcessing\",\n    value: function (e, t, n) {\n      var i,\n          r = _createForOfIteratorHelper(e);\n\n      try {\n        for (r.s(); !(i = r.n()).done;) {\n          var o = i.value;\n          o.status = b.ERROR, this.emit(\"error\", o, t, n), this.emit(\"complete\", o);\n        }\n      } catch (e) {\n        r.e(e);\n      } finally {\n        r.f();\n      }\n\n      if (this.options.uploadMultiple && (this.emit(\"errormultiple\", e, t, n), this.emit(\"completemultiple\", e)), this.options.autoProcessQueue) return this.processQueue();\n    }\n  }], [{\n    key: \"uuidv4\",\n    value: function () {\n      return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function (e) {\n        var t = 16 * Math.random() | 0;\n        return (\"x\" === e ? t : 3 & t | 8).toString(16);\n      });\n    }\n  }]), b;\n}();\n\nDropzone.initClass(), Dropzone.version = \"5.7.2\", Dropzone.options = {}, Dropzone.optionsForElement = function (e) {\n  return e.getAttribute(\"id\") ? Dropzone.options[camelize(e.getAttribute(\"id\"))] : void 0;\n}, Dropzone.instances = [], Dropzone.forElement = function (e) {\n  if (\"string\" == typeof e && (e = document.querySelector(e)), null == (null != e ? e.dropzone : void 0)) throw new Error(\"No Dropzone found for given element. This is probably because you're trying to access it before Dropzone had the time to initialize. Use the `init` option to setup any additional observers on your Dropzone.\");\n  return e.dropzone;\n}, Dropzone.autoDiscover = !0, Dropzone.discover = function () {\n  var o;\n  if (document.querySelectorAll) o = document.querySelectorAll(\".dropzone\");else {\n    o = [];\n\n    var e = function (r) {\n      return function () {\n        var e,\n            t = [],\n            n = _createForOfIteratorHelper(r);\n\n        try {\n          for (n.s(); !(e = n.n()).done;) {\n            var i = e.value;\n            /(^| )dropzone($| )/.test(i.className) ? t.push(o.push(i)) : t.push(void 0);\n          }\n        } catch (e) {\n          n.e(e);\n        } finally {\n          n.f();\n        }\n\n        return t;\n      }();\n    };\n\n    e(document.getElementsByTagName(\"div\")), e(document.getElementsByTagName(\"form\"));\n  }\n  return function () {\n    var e,\n        t = [],\n        n = _createForOfIteratorHelper(o);\n\n    try {\n      for (n.s(); !(e = n.n()).done;) {\n        var i = e.value;\n        !1 !== Dropzone.optionsForElement(i) ? t.push(new Dropzone(i)) : t.push(void 0);\n      }\n    } catch (e) {\n      n.e(e);\n    } finally {\n      n.f();\n    }\n\n    return t;\n  }();\n}, Dropzone.blacklistedBrowsers = [/opera.*(Macintosh|Windows Phone).*version\\/12/i], Dropzone.isBrowserSupported = function () {\n  var e = !0;\n  if (window.File && window.FileReader && window.FileList && window.Blob && window.FormData && document.querySelector) {\n    if (\"classList\" in document.createElement(\"a\")) {\n      var t,\n          n = _createForOfIteratorHelper(Dropzone.blacklistedBrowsers);\n\n      try {\n        for (n.s(); !(t = n.n()).done;) {\n          t.value.test(navigator.userAgent) && (e = !1);\n        }\n      } catch (e) {\n        n.e(e);\n      } finally {\n        n.f();\n      }\n    } else e = !1;\n  } else e = !1;\n  return e;\n}, Dropzone.dataURItoBlob = function (e) {\n  for (var t = atob(e.split(\",\")[1]), n = e.split(\",\")[0].split(\":\")[1].split(\";\")[0], i = new ArrayBuffer(t.length), r = new Uint8Array(i), o = 0, a = t.length, l = 0 <= a; l ? o <= a : a <= o; l ? o++ : o--) r[o] = t.charCodeAt(o);\n\n  return new Blob([i], {\n    type: n\n  });\n};\n\nvar without = function (e, t) {\n  return e.filter(function (e) {\n    return e !== t;\n  }).map(function (e) {\n    return e;\n  });\n},\n    camelize = function (e) {\n  return e.replace(/[\\-_](\\w)/g, function (e) {\n    return e.charAt(1).toUpperCase();\n  });\n};\n\nDropzone.createElement = function (e) {\n  var t = document.createElement(\"div\");\n  return t.innerHTML = e, t.childNodes[0];\n}, Dropzone.elementInside = function (e, t) {\n  if (e === t) return !0;\n\n  for (; e = e.parentNode;) if (e === t) return !0;\n\n  return !1;\n}, Dropzone.getElement = function (e, t) {\n  var n;\n  if (\"string\" == typeof e ? n = document.querySelector(e) : null != e.nodeType && (n = e), null == n) throw new Error(\"Invalid `\".concat(t, \"` option provided. Please provide a CSS selector or a plain HTML element.\"));\n  return n;\n}, Dropzone.getElements = function (e, t) {\n  var n, i;\n\n  if (e instanceof Array) {\n    i = [];\n\n    try {\n      var r,\n          o = _createForOfIteratorHelper(e);\n\n      try {\n        for (o.s(); !(r = o.n()).done;) n = r.value, i.push(this.getElement(n, t));\n      } catch (e) {\n        o.e(e);\n      } finally {\n        o.f();\n      }\n    } catch (e) {\n      i = null;\n    }\n  } else if (\"string\" == typeof e) {\n    i = [];\n\n    var a,\n        l = _createForOfIteratorHelper(document.querySelectorAll(e));\n\n    try {\n      for (l.s(); !(a = l.n()).done;) n = a.value, i.push(n);\n    } catch (e) {\n      l.e(e);\n    } finally {\n      l.f();\n    }\n  } else null != e.nodeType && (i = [e]);\n\n  if (null == i || !i.length) throw new Error(\"Invalid `\".concat(t, \"` option provided. Please provide a CSS selector, a plain HTML element or a list of those.\"));\n  return i;\n}, Dropzone.confirm = function (e, t, n) {\n  return window.confirm(e) ? t() : null != n ? n() : void 0;\n}, Dropzone.isValidFile = function (e, t) {\n  if (!t) return !0;\n  t = t.split(\",\");\n\n  var n,\n      i = e.type,\n      r = i.replace(/\\/.*$/, \"\"),\n      o = _createForOfIteratorHelper(t);\n\n  try {\n    for (o.s(); !(n = o.n()).done;) {\n      var a = n.value;\n\n      if (\".\" === (a = a.trim()).charAt(0)) {\n        if (-1 !== e.name.toLowerCase().indexOf(a.toLowerCase(), e.name.length - a.length)) return !0;\n      } else if (/\\/\\*$/.test(a)) {\n        if (r === a.replace(/\\/.*$/, \"\")) return !0;\n      } else if (i === a) return !0;\n    }\n  } catch (e) {\n    o.e(e);\n  } finally {\n    o.f();\n  }\n\n  return !1;\n}, \"undefined\" != typeof jQuery && null !== jQuery && (jQuery.fn.dropzone = function (e) {\n  return this.each(function () {\n    return new Dropzone(this, e);\n  });\n}), \"undefined\" != typeof module && null !== module ? module.exports = Dropzone : window.Dropzone = Dropzone, Dropzone.ADDED = \"added\", Dropzone.QUEUED = \"queued\", Dropzone.ACCEPTED = Dropzone.QUEUED, Dropzone.UPLOADING = \"uploading\", Dropzone.PROCESSING = Dropzone.UPLOADING, Dropzone.CANCELED = \"canceled\", Dropzone.ERROR = \"error\", Dropzone.SUCCESS = \"success\";\n\nvar detectVerticalSquash = function (e) {\n  e.naturalWidth;\n  var t = e.naturalHeight,\n      n = document.createElement(\"canvas\");\n  n.width = 1, n.height = t;\n  var i = n.getContext(\"2d\");\n  i.drawImage(e, 0, 0);\n\n  for (var r = i.getImageData(1, 0, 1, t).data, o = 0, a = t, l = t; o < l;) {\n    0 === r[4 * (l - 1) + 3] ? a = l : o = l, l = a + o >> 1;\n  }\n\n  var s = l / t;\n  return 0 == s ? 1 : s;\n},\n    drawImageIOSFix = function (e, t, n, i, r, o, a, l, s, u) {\n  var c = detectVerticalSquash(t);\n  return e.drawImage(t, n, i, r, o, a, l, s, u / c);\n},\n    ExifRestore = function () {\n  function e() {\n    _classCallCheck(this, e);\n  }\n\n  return _createClass(e, null, [{\n    key: \"initClass\",\n    value: function () {\n      this.KEY_STR = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\n    }\n  }, {\n    key: \"encode64\",\n    value: function (e) {\n      for (var t = \"\", n = void 0, i = void 0, r = \"\", o = void 0, a = void 0, l = void 0, s = \"\", u = 0; o = (n = e[u++]) >> 2, a = (3 & n) << 4 | (i = e[u++]) >> 4, l = (15 & i) << 2 | (r = e[u++]) >> 6, s = 63 & r, isNaN(i) ? l = s = 64 : isNaN(r) && (s = 64), t = t + this.KEY_STR.charAt(o) + this.KEY_STR.charAt(a) + this.KEY_STR.charAt(l) + this.KEY_STR.charAt(s), n = i = r = \"\", o = a = l = s = \"\", u < e.length;);\n\n      return t;\n    }\n  }, {\n    key: \"restore\",\n    value: function (e, t) {\n      if (!e.match(\"data:image/jpeg;base64,\")) return t;\n      var n = this.decode64(e.replace(\"data:image/jpeg;base64,\", \"\")),\n          i = this.slice2Segments(n),\n          r = this.exifManipulation(t, i);\n      return \"data:image/jpeg;base64,\".concat(this.encode64(r));\n    }\n  }, {\n    key: \"exifManipulation\",\n    value: function (e, t) {\n      var n = this.getExifArray(t),\n          i = this.insertExif(e, n);\n      return new Uint8Array(i);\n    }\n  }, {\n    key: \"getExifArray\",\n    value: function (e) {\n      for (var t = void 0, n = 0; n < e.length;) {\n        if (255 === (t = e[n])[0] & 225 === t[1]) return t;\n        n++;\n      }\n\n      return [];\n    }\n  }, {\n    key: \"insertExif\",\n    value: function (e, t) {\n      var n = e.replace(\"data:image/jpeg;base64,\", \"\"),\n          i = this.decode64(n),\n          r = i.indexOf(255, 3),\n          o = i.slice(0, r),\n          a = i.slice(r),\n          l = o;\n      return l = (l = l.concat(t)).concat(a);\n    }\n  }, {\n    key: \"slice2Segments\",\n    value: function (e) {\n      for (var t = 0, n = [];;) {\n        if (255 === e[t] & 218 === e[t + 1]) break;\n        if (255 === e[t] & 216 === e[t + 1]) t += 2;else {\n          var i = t + (256 * e[t + 2] + e[t + 3]) + 2,\n              r = e.slice(t, i);\n          n.push(r), t = i;\n        }\n        if (t > e.length) break;\n      }\n\n      return n;\n    }\n  }, {\n    key: \"decode64\",\n    value: function (e) {\n      var t = void 0,\n          n = void 0,\n          i = \"\",\n          r = void 0,\n          o = void 0,\n          a = \"\",\n          l = 0,\n          s = [];\n\n      for (/[^A-Za-z0-9\\+\\/\\=]/g.exec(e) && console.warn(\"There were invalid base64 characters in the input text.\\nValid base64 characters are A-Z, a-z, 0-9, '+', '/',and '='\\nExpect errors in decoding.\"), e = e.replace(/[^A-Za-z0-9\\+\\/\\=]/g, \"\"); t = this.KEY_STR.indexOf(e.charAt(l++)) << 2 | (r = this.KEY_STR.indexOf(e.charAt(l++))) >> 4, n = (15 & r) << 4 | (o = this.KEY_STR.indexOf(e.charAt(l++))) >> 2, i = (3 & o) << 6 | (a = this.KEY_STR.indexOf(e.charAt(l++))), s.push(t), 64 !== o && s.push(n), 64 !== a && s.push(i), t = n = i = \"\", r = o = a = \"\", l < e.length;);\n\n      return s;\n    }\n  }]), e;\n}();\n\nExifRestore.initClass();\n\nvar contentLoaded = function (t, n) {\n  function i(e) {\n    if (\"readystatechange\" !== e.type || \"complete\" === o.readyState) return (\"load\" === e.type ? t : o)[s](u + e.type, i, !1), !r && (r = !0) ? n.call(t, e.type || e) : void 0;\n  }\n\n  var r = !1,\n      e = !0,\n      o = t.document,\n      a = o.documentElement,\n      l = o.addEventListener ? \"addEventListener\" : \"attachEvent\",\n      s = o.addEventListener ? \"removeEventListener\" : \"detachEvent\",\n      u = o.addEventListener ? \"\" : \"on\";\n\n  if (\"complete\" !== o.readyState) {\n    if (o.createEventObject && a.doScroll) {\n      try {\n        e = !t.frameElement;\n      } catch (e) {}\n\n      e && !function t() {\n        try {\n          a.doScroll(\"left\");\n        } catch (e) {\n          return void setTimeout(t, 50);\n        }\n\n        return i(\"poll\");\n      }();\n    }\n\n    return o[l](u + \"DOMContentLoaded\", i, !1), o[l](u + \"readystatechange\", i, !1), t[l](u + \"load\", i, !1);\n  }\n};\n\nfunction __guard__(e, t) {\n  return null != e ? t(e) : void 0;\n}\n\nfunction __guardMethod__(e, t, n) {\n  return null != e && \"function\" == typeof e[t] ? n(e, t) : void 0;\n}\n\nDropzone._autoDiscoverFunction = function () {\n  if (Dropzone.autoDiscover) return Dropzone.discover();\n}, contentLoaded(window, Dropzone._autoDiscoverFunction);","map":null,"metadata":{},"sourceType":"script"}