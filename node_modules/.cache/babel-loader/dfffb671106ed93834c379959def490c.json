{"ast":null,"code":"import Dropzone from \"dropzone\";\nexport const MultipleImageUpload = () => {\n  Dropzone.autoDiscover = false;\n  var dropzone = new Dropzone(\"#mydropzone\", {\n    url: \"#\"\n  });\n  var minSteps = 6,\n      maxSteps = 60,\n      timeBetweenSteps = 100,\n      bytesPerStep = 100000;\n\n  dropzone.uploadFiles = function (files) {\n    var self = this;\n\n    for (var i = 0; i < files.length; i++) {\n      var file = files[i];\n      let totalSteps = Math.round(Math.min(maxSteps, Math.max(minSteps, file.size / bytesPerStep)));\n\n      for (var step = 0; step < totalSteps; step++) {\n        var duration = timeBetweenSteps * (step + 1);\n        setTimeout(function (file, totalSteps, step) {\n          return function () {\n            file.upload = {\n              progress: 100 * (step + 1) / totalSteps,\n              total: file.size,\n              bytesSent: (step + 1) * file.size / totalSteps\n            };\n            self.emit(\"uploadprogress\", file, file.upload.progress, file.upload.bytesSent);\n\n            if (file.upload.progress == 100) {\n              file.status = Dropzone.SUCCESS;\n              self.emit(\"success\", file, \"success\", null);\n              self.emit(\"complete\", file);\n              self.processQueue();\n            }\n          };\n        }(file, totalSteps, step), duration);\n      }\n    }\n  };\n};","map":{"version":3,"sources":["/Users/nayanjain/Desktop/stisla-react-free-admin-dashboard/src/js/MultipleUploads.js"],"names":["Dropzone","MultipleImageUpload","autoDiscover","dropzone","url","minSteps","maxSteps","timeBetweenSteps","bytesPerStep","uploadFiles","files","self","i","length","file","totalSteps","Math","round","min","max","size","step","duration","setTimeout","upload","progress","total","bytesSent","emit","status","SUCCESS","processQueue"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,UAArB;AAEA,OAAO,MAAMC,mBAAmB,GAAG,MAAM;AACrCD,EAAAA,QAAQ,CAACE,YAAT,GAAwB,KAAxB;AAEA,MAAIC,QAAQ,GAAG,IAAIH,QAAJ,CAAa,aAAb,EAA4B;AACvCI,IAAAA,GAAG,EAAE;AADkC,GAA5B,CAAf;AAIA,MAAIC,QAAQ,GAAG,CAAf;AAAA,MACIC,QAAQ,GAAG,EADf;AAAA,MAEIC,gBAAgB,GAAG,GAFvB;AAAA,MAGIC,YAAY,GAAG,MAHnB;;AAKAL,EAAAA,QAAQ,CAACM,WAAT,GAAuB,UAAUC,KAAV,EAAiB;AACpC,QAAIC,IAAI,GAAG,IAAX;;AAEA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,KAAK,CAACG,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;AACnC,UAAIE,IAAI,GAAGJ,KAAK,CAACE,CAAD,CAAhB;AACA,UAAIG,UAAU,GAAGC,IAAI,CAACC,KAAL,CACbD,IAAI,CAACE,GAAL,CAASZ,QAAT,EAAmBU,IAAI,CAACG,GAAL,CAASd,QAAT,EAAmBS,IAAI,CAACM,IAAL,GAAYZ,YAA/B,CAAnB,CADa,CAAjB;;AAIA,WAAK,IAAIa,IAAI,GAAG,CAAhB,EAAmBA,IAAI,GAAGN,UAA1B,EAAsCM,IAAI,EAA1C,EAA8C;AAC1C,YAAIC,QAAQ,GAAGf,gBAAgB,IAAIc,IAAI,GAAG,CAAX,CAA/B;AACAE,QAAAA,UAAU,CACL,UAAUT,IAAV,EAAgBC,UAAhB,EAA4BM,IAA5B,EAAkC;AAC/B,iBAAO,YAAY;AACfP,YAAAA,IAAI,CAACU,MAAL,GAAc;AACVC,cAAAA,QAAQ,EAAG,OAAOJ,IAAI,GAAG,CAAd,CAAD,GAAqBN,UADrB;AAEVW,cAAAA,KAAK,EAAEZ,IAAI,CAACM,IAFF;AAGVO,cAAAA,SAAS,EAAG,CAACN,IAAI,GAAG,CAAR,IAAaP,IAAI,CAACM,IAAnB,GAA2BL;AAH5B,aAAd;AAMAJ,YAAAA,IAAI,CAACiB,IAAL,CACI,gBADJ,EAEId,IAFJ,EAGIA,IAAI,CAACU,MAAL,CAAYC,QAHhB,EAIIX,IAAI,CAACU,MAAL,CAAYG,SAJhB;;AAMA,gBAAIb,IAAI,CAACU,MAAL,CAAYC,QAAZ,IAAwB,GAA5B,EAAiC;AAC7BX,cAAAA,IAAI,CAACe,MAAL,GAAc7B,QAAQ,CAAC8B,OAAvB;AACAnB,cAAAA,IAAI,CAACiB,IAAL,CAAU,SAAV,EAAqBd,IAArB,EAA2B,SAA3B,EAAsC,IAAtC;AACAH,cAAAA,IAAI,CAACiB,IAAL,CAAU,UAAV,EAAsBd,IAAtB;AACAH,cAAAA,IAAI,CAACoB,YAAL;AACH;AACJ,WAnBD;AAoBH,SArBD,CAqBGjB,IArBH,EAqBSC,UArBT,EAqBqBM,IArBrB,CADM,EAuBNC,QAvBM,CAAV;AAyBH;AACJ;AACJ,GAtCD;AAuCH,CAnDM","sourcesContent":["import Dropzone from \"dropzone\";\n\nexport const MultipleImageUpload = () => {\n    Dropzone.autoDiscover = false;\n\n    var dropzone = new Dropzone(\"#mydropzone\", {\n        url: \"#\",\n    });\n\n    var minSteps = 6,\n        maxSteps = 60,\n        timeBetweenSteps = 100,\n        bytesPerStep = 100000;\n\n    dropzone.uploadFiles = function (files) {\n        var self = this;\n\n        for (var i = 0; i < files.length; i++) {\n            var file = files[i];\n            let totalSteps = Math.round(\n                Math.min(maxSteps, Math.max(minSteps, file.size / bytesPerStep))\n            );\n\n            for (var step = 0; step < totalSteps; step++) {\n                var duration = timeBetweenSteps * (step + 1);\n                setTimeout(\n                    (function (file, totalSteps, step) {\n                        return function () {\n                            file.upload = {\n                                progress: (100 * (step + 1)) / totalSteps,\n                                total: file.size,\n                                bytesSent: ((step + 1) * file.size) / totalSteps,\n                            };\n\n                            self.emit(\n                                \"uploadprogress\",\n                                file,\n                                file.upload.progress,\n                                file.upload.bytesSent\n                            );\n                            if (file.upload.progress == 100) {\n                                file.status = Dropzone.SUCCESS;\n                                self.emit(\"success\", file, \"success\", null);\n                                self.emit(\"complete\", file);\n                                self.processQueue();\n                            }\n                        };\n                    })(file, totalSteps, step),\n                    duration\n                );\n            }\n        }\n    };\n};"]},"metadata":{},"sourceType":"module"}