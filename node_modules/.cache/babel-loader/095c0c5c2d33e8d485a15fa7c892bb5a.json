{"ast":null,"code":"/*!\n* inputmask.extensions.js\n* https://github.com/RobinHerbots/Inputmask\n* Copyright (c) 2010 - 2019 Robin Herbots\n* Licensed under the MIT license (http://www.opensource.org/licenses/mit-license.php)\n* Version: 4.0.9\n*/\n(function (factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"./inputmask\"], factory);\n  } else if (typeof exports === \"object\") {\n    module.exports = factory(require(\"./inputmask\"));\n  } else {\n    factory(window.Inputmask);\n  }\n})(function (Inputmask) {\n  Inputmask.extendDefinitions({\n    A: {\n      validator: \"[A-Za-z\\u0410-\\u044f\\u0401\\u0451\\xc0-\\xff\\xb5]\",\n      casing: \"upper\"\n    },\n    \"&\": {\n      validator: \"[0-9A-Za-z\\u0410-\\u044f\\u0401\\u0451\\xc0-\\xff\\xb5]\",\n      casing: \"upper\"\n    },\n    \"#\": {\n      validator: \"[0-9A-Fa-f]\",\n      casing: \"upper\"\n    }\n  });\n  Inputmask.extendAliases({\n    cssunit: {\n      regex: \"[+-]?[0-9]+\\\\.?([0-9]+)?(px|em|rem|ex|%|in|cm|mm|pt|pc)\"\n    },\n    url: {\n      regex: \"(https?|ftp)//.*\",\n      autoUnmask: false\n    },\n    ip: {\n      mask: \"i[i[i]].i[i[i]].i[i[i]].i[i[i]]\",\n      definitions: {\n        i: {\n          validator: function (chrs, maskset, pos, strict, opts) {\n            if (pos - 1 > -1 && maskset.buffer[pos - 1] !== \".\") {\n              chrs = maskset.buffer[pos - 1] + chrs;\n\n              if (pos - 2 > -1 && maskset.buffer[pos - 2] !== \".\") {\n                chrs = maskset.buffer[pos - 2] + chrs;\n              } else chrs = \"0\" + chrs;\n            } else chrs = \"00\" + chrs;\n\n            return new RegExp(\"25[0-5]|2[0-4][0-9]|[01][0-9][0-9]\").test(chrs);\n          }\n        }\n      },\n      onUnMask: function (maskedValue, unmaskedValue, opts) {\n        return maskedValue;\n      },\n      inputmode: \"numeric\"\n    },\n    email: {\n      mask: \"*{1,64}[.*{1,64}][.*{1,64}][.*{1,63}]@-{1,63}.-{1,63}[.-{1,63}][.-{1,63}]\",\n      greedy: false,\n      casing: \"lower\",\n      onBeforePaste: function (pastedValue, opts) {\n        pastedValue = pastedValue.toLowerCase();\n        return pastedValue.replace(\"mailto:\", \"\");\n      },\n      definitions: {\n        \"*\": {\n          validator: \"[0-9\\uff11-\\uff19A-Za-z\\u0410-\\u044f\\u0401\\u0451\\xc0-\\xff\\xb5!#$%&'*+/=?^_`{|}~-]\"\n        },\n        \"-\": {\n          validator: \"[0-9A-Za-z-]\"\n        }\n      },\n      onUnMask: function (maskedValue, unmaskedValue, opts) {\n        return maskedValue;\n      },\n      inputmode: \"email\"\n    },\n    mac: {\n      mask: \"##:##:##:##:##:##\"\n    },\n    vin: {\n      mask: \"V{13}9{4}\",\n      definitions: {\n        V: {\n          validator: \"[A-HJ-NPR-Za-hj-npr-z\\\\d]\",\n          casing: \"upper\"\n        }\n      },\n      clearIncomplete: true,\n      autoUnmask: true\n    }\n  });\n  return Inputmask;\n});","map":null,"metadata":{},"sourceType":"script"}