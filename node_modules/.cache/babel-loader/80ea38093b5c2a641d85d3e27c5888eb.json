{"ast":null,"code":"/*\r\n* iziToast | v1.4.0\r\n* http://izitoast.marcelodolce.com\r\n* by Marcelo Dolce.\r\n*/\n(function (root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    define([], factory(root));\n  } else if (typeof exports === 'object') {\n    module.exports = factory(root);\n  } else {\n    root.iziToast = factory(root);\n  }\n})(typeof global !== 'undefined' ? global : window || this.window || this.global, function (root) {\n  'use strict'; //\n  // Variables\n  //\n\n  var $iziToast = {},\n      PLUGIN_NAME = 'iziToast',\n      BODY = document.querySelector('body'),\n      ISMOBILE = /Mobi/.test(navigator.userAgent) ? true : false,\n      ISCHROME = /Chrome/.test(navigator.userAgent) && /Google Inc/.test(navigator.vendor),\n      ISFIREFOX = typeof InstallTrigger !== 'undefined',\n      ACCEPTSTOUCH = ('ontouchstart' in document.documentElement),\n      POSITIONS = ['bottomRight', 'bottomLeft', 'bottomCenter', 'topRight', 'topLeft', 'topCenter', 'center'],\n      THEMES = {\n    info: {\n      color: 'blue',\n      icon: 'ico-info'\n    },\n    success: {\n      color: 'green',\n      icon: 'ico-success'\n    },\n    warning: {\n      color: 'orange',\n      icon: 'ico-warning'\n    },\n    error: {\n      color: 'red',\n      icon: 'ico-error'\n    },\n    question: {\n      color: 'yellow',\n      icon: 'ico-question'\n    }\n  },\n      MOBILEWIDTH = 568,\n      CONFIG = {};\n  $iziToast.children = {}; // Default settings\n\n  var defaults = {\n    id: null,\n    class: '',\n    title: '',\n    titleColor: '',\n    titleSize: '',\n    titleLineHeight: '',\n    message: '',\n    messageColor: '',\n    messageSize: '',\n    messageLineHeight: '',\n    backgroundColor: '',\n    theme: 'light',\n    // dark\n    color: '',\n    // blue, red, green, yellow\n    icon: '',\n    iconText: '',\n    iconColor: '',\n    iconUrl: null,\n    image: '',\n    imageWidth: 50,\n    maxWidth: null,\n    zindex: null,\n    layout: 1,\n    balloon: false,\n    close: true,\n    closeOnEscape: false,\n    closeOnClick: false,\n    displayMode: 0,\n    position: 'bottomRight',\n    // bottomRight, bottomLeft, topRight, topLeft, topCenter, bottomCenter, center\n    target: '',\n    targetFirst: true,\n    timeout: 5000,\n    rtl: false,\n    animateInside: true,\n    drag: true,\n    pauseOnHover: true,\n    resetOnHover: false,\n    progressBar: true,\n    progressBarColor: '',\n    progressBarEasing: 'linear',\n    overlay: false,\n    overlayClose: false,\n    overlayColor: 'rgba(0, 0, 0, 0.6)',\n    transitionIn: 'fadeInUp',\n    // bounceInLeft, bounceInRight, bounceInUp, bounceInDown, fadeIn, fadeInDown, fadeInUp, fadeInLeft, fadeInRight, flipInX\n    transitionOut: 'fadeOut',\n    // fadeOut, fadeOutUp, fadeOutDown, fadeOutLeft, fadeOutRight, flipOutX\n    transitionInMobile: 'fadeInUp',\n    transitionOutMobile: 'fadeOutDown',\n    buttons: {},\n    inputs: {},\n    onOpening: function () {},\n    onOpened: function () {},\n    onClosing: function () {},\n    onClosed: function () {}\n  }; //\n  // Methods\n  //\n\n  /**\r\n   * Polyfill for remove() method\r\n   */\n\n  if (!('remove' in Element.prototype)) {\n    Element.prototype.remove = function () {\n      if (this.parentNode) {\n        this.parentNode.removeChild(this);\n      }\n    };\n  }\n  /*\r\n      * Polyfill for CustomEvent for IE >= 9\r\n      * https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent/CustomEvent#Polyfill\r\n      */\n\n\n  if (typeof window.CustomEvent !== 'function') {\n    var CustomEventPolyfill = function (event, params) {\n      params = params || {\n        bubbles: false,\n        cancelable: false,\n        detail: undefined\n      };\n      var evt = document.createEvent('CustomEvent');\n      evt.initCustomEvent(event, params.bubbles, params.cancelable, params.detail);\n      return evt;\n    };\n\n    CustomEventPolyfill.prototype = window.Event.prototype;\n    window.CustomEvent = CustomEventPolyfill;\n  }\n  /**\r\n   * A simple forEach() implementation for Arrays, Objects and NodeLists\r\n   * @private\r\n   * @param {Array|Object|NodeList} collection Collection of items to iterate\r\n   * @param {Function} callback Callback function for each iteration\r\n   * @param {Array|Object|NodeList} scope Object/NodeList/Array that forEach is iterating over (aka `this`)\r\n   */\n\n\n  var forEach = function (collection, callback, scope) {\n    if (Object.prototype.toString.call(collection) === '[object Object]') {\n      for (var prop in collection) {\n        if (Object.prototype.hasOwnProperty.call(collection, prop)) {\n          callback.call(scope, collection[prop], prop, collection);\n        }\n      }\n    } else {\n      if (collection) {\n        for (var i = 0, len = collection.length; i < len; i++) {\n          callback.call(scope, collection[i], i, collection);\n        }\n      }\n    }\n  };\n  /**\r\n   * Merge defaults with user options\r\n   * @private\r\n   * @param {Object} defaults Default settings\r\n   * @param {Object} options User options\r\n   * @returns {Object} Merged values of defaults and options\r\n   */\n\n\n  var extend = function (defaults, options) {\n    var extended = {};\n    forEach(defaults, function (value, prop) {\n      extended[prop] = defaults[prop];\n    });\n    forEach(options, function (value, prop) {\n      extended[prop] = options[prop];\n    });\n    return extended;\n  };\n  /**\r\n   * Create a fragment DOM elements\r\n   * @private\r\n   */\n\n\n  var createFragElem = function (htmlStr) {\n    var frag = document.createDocumentFragment(),\n        temp = document.createElement('div');\n    temp.innerHTML = htmlStr;\n\n    while (temp.firstChild) {\n      frag.appendChild(temp.firstChild);\n    }\n\n    return frag;\n  };\n  /**\r\n   * Generate new ID\r\n   * @private\r\n   */\n\n\n  var generateId = function (params) {\n    var newId = btoa(encodeURIComponent(params));\n    return newId.replace(/=/g, \"\");\n  };\n  /**\r\n   * Check if is a color\r\n   * @private\r\n   */\n\n\n  var isColor = function (color) {\n    if (color.substring(0, 1) == '#' || color.substring(0, 3) == 'rgb' || color.substring(0, 3) == 'hsl') {\n      return true;\n    } else {\n      return false;\n    }\n  };\n  /**\r\n   * Check if is a Base64 string\r\n   * @private\r\n   */\n\n\n  var isBase64 = function (str) {\n    try {\n      return btoa(atob(str)) == str;\n    } catch (err) {\n      return false;\n    }\n  };\n  /**\r\n   * Drag method of toasts\r\n   * @private\r\n   */\n\n\n  var drag = function () {\n    return {\n      move: function (toast, instance, settings, xpos) {\n        var opacity,\n            opacityRange = 0.3,\n            distance = 180;\n\n        if (xpos !== 0) {\n          toast.classList.add(PLUGIN_NAME + '-dragged');\n          toast.style.transform = 'translateX(' + xpos + 'px)';\n\n          if (xpos > 0) {\n            opacity = (distance - xpos) / distance;\n\n            if (opacity < opacityRange) {\n              instance.hide(extend(settings, {\n                transitionOut: 'fadeOutRight',\n                transitionOutMobile: 'fadeOutRight'\n              }), toast, 'drag');\n            }\n          } else {\n            opacity = (distance + xpos) / distance;\n\n            if (opacity < opacityRange) {\n              instance.hide(extend(settings, {\n                transitionOut: 'fadeOutLeft',\n                transitionOutMobile: 'fadeOutLeft'\n              }), toast, 'drag');\n            }\n          }\n\n          toast.style.opacity = opacity;\n\n          if (opacity < opacityRange) {\n            if (ISCHROME || ISFIREFOX) toast.style.left = xpos + 'px';\n            toast.parentNode.style.opacity = opacityRange;\n            this.stopMoving(toast, null);\n          }\n        }\n      },\n      startMoving: function (toast, instance, settings, e) {\n        e = e || window.event;\n        var posX = ACCEPTSTOUCH ? e.touches[0].clientX : e.clientX,\n            toastLeft = toast.style.transform.replace('px)', '');\n        toastLeft = toastLeft.replace('translateX(', '');\n        var offsetX = posX - toastLeft;\n\n        if (settings.transitionIn) {\n          toast.classList.remove(settings.transitionIn);\n        }\n\n        if (settings.transitionInMobile) {\n          toast.classList.remove(settings.transitionInMobile);\n        }\n\n        toast.style.transition = '';\n\n        if (ACCEPTSTOUCH) {\n          document.ontouchmove = function (e) {\n            e.preventDefault();\n            e = e || window.event;\n            var posX = e.touches[0].clientX,\n                finalX = posX - offsetX;\n            drag.move(toast, instance, settings, finalX);\n          };\n        } else {\n          document.onmousemove = function (e) {\n            e.preventDefault();\n            e = e || window.event;\n            var posX = e.clientX,\n                finalX = posX - offsetX;\n            drag.move(toast, instance, settings, finalX);\n          };\n        }\n      },\n      stopMoving: function (toast, e) {\n        if (ACCEPTSTOUCH) {\n          document.ontouchmove = function () {};\n        } else {\n          document.onmousemove = function () {};\n        }\n\n        toast.style.opacity = '';\n        toast.style.transform = '';\n\n        if (toast.classList.contains(PLUGIN_NAME + '-dragged')) {\n          toast.classList.remove(PLUGIN_NAME + '-dragged');\n          toast.style.transition = 'transform 0.4s ease, opacity 0.4s ease';\n          setTimeout(function () {\n            toast.style.transition = '';\n          }, 400);\n        }\n      }\n    };\n  }();\n\n  $iziToast.setSetting = function (ref, option, value) {\n    $iziToast.children[ref][option] = value;\n  };\n\n  $iziToast.getSetting = function (ref, option) {\n    return $iziToast.children[ref][option];\n  };\n  /**\r\n   * Destroy the current initialization.\r\n   * @public\r\n   */\n\n\n  $iziToast.destroy = function () {\n    forEach(document.querySelectorAll('.' + PLUGIN_NAME + '-overlay'), function (element, index) {\n      element.remove();\n    });\n    forEach(document.querySelectorAll('.' + PLUGIN_NAME + '-wrapper'), function (element, index) {\n      element.remove();\n    });\n    forEach(document.querySelectorAll('.' + PLUGIN_NAME), function (element, index) {\n      element.remove();\n    });\n    this.children = {}; // Remove event listeners\n\n    document.removeEventListener(PLUGIN_NAME + '-opened', {}, false);\n    document.removeEventListener(PLUGIN_NAME + '-opening', {}, false);\n    document.removeEventListener(PLUGIN_NAME + '-closing', {}, false);\n    document.removeEventListener(PLUGIN_NAME + '-closed', {}, false);\n    document.removeEventListener('keyup', {}, false); // Reset variables\n\n    CONFIG = {};\n  };\n  /**\r\n   * Initialize Plugin\r\n   * @public\r\n   * @param {Object} options User settings\r\n   */\n\n\n  $iziToast.settings = function (options) {\n    // Destroy any existing initializations\n    $iziToast.destroy();\n    CONFIG = options;\n    defaults = extend(defaults, options || {});\n  };\n  /**\r\n   * Building themes functions.\r\n   * @public\r\n   * @param {Object} options User settings\r\n   */\n\n\n  forEach(THEMES, function (theme, name) {\n    $iziToast[name] = function (options) {\n      var settings = extend(CONFIG, options || {});\n      settings = extend(theme, settings || {});\n      this.show(settings);\n    };\n  });\n  /**\r\n   * Do the calculation to move the progress bar\r\n   * @private\r\n   */\n\n  $iziToast.progress = function (options, $toast, callback) {\n    var that = this,\n        ref = $toast.getAttribute('data-iziToast-ref'),\n        settings = extend(this.children[ref], options || {}),\n        $elem = $toast.querySelector('.' + PLUGIN_NAME + '-progressbar div');\n    return {\n      start: function () {\n        if (typeof settings.time.REMAINING == 'undefined') {\n          $toast.classList.remove(PLUGIN_NAME + '-reseted');\n\n          if ($elem !== null) {\n            $elem.style.transition = 'width ' + settings.timeout + 'ms ' + settings.progressBarEasing;\n            $elem.style.width = '0%';\n          }\n\n          settings.time.START = new Date().getTime();\n          settings.time.END = settings.time.START + settings.timeout;\n          settings.time.TIMER = setTimeout(function () {\n            clearTimeout(settings.time.TIMER);\n\n            if (!$toast.classList.contains(PLUGIN_NAME + '-closing')) {\n              that.hide(settings, $toast, 'timeout');\n\n              if (typeof callback === 'function') {\n                callback.apply(that);\n              }\n            }\n          }, settings.timeout);\n          that.setSetting(ref, 'time', settings.time);\n        }\n      },\n      pause: function () {\n        if (typeof settings.time.START !== 'undefined' && !$toast.classList.contains(PLUGIN_NAME + '-paused') && !$toast.classList.contains(PLUGIN_NAME + '-reseted')) {\n          $toast.classList.add(PLUGIN_NAME + '-paused');\n          settings.time.REMAINING = settings.time.END - new Date().getTime();\n          clearTimeout(settings.time.TIMER);\n          that.setSetting(ref, 'time', settings.time);\n\n          if ($elem !== null) {\n            var computedStyle = window.getComputedStyle($elem),\n                propertyWidth = computedStyle.getPropertyValue('width');\n            $elem.style.transition = 'none';\n            $elem.style.width = propertyWidth;\n          }\n\n          if (typeof callback === 'function') {\n            setTimeout(function () {\n              callback.apply(that);\n            }, 10);\n          }\n        }\n      },\n      resume: function () {\n        if (typeof settings.time.REMAINING !== 'undefined') {\n          $toast.classList.remove(PLUGIN_NAME + '-paused');\n\n          if ($elem !== null) {\n            $elem.style.transition = 'width ' + settings.time.REMAINING + 'ms ' + settings.progressBarEasing;\n            $elem.style.width = '0%';\n          }\n\n          settings.time.END = new Date().getTime() + settings.time.REMAINING;\n          settings.time.TIMER = setTimeout(function () {\n            clearTimeout(settings.time.TIMER);\n\n            if (!$toast.classList.contains(PLUGIN_NAME + '-closing')) {\n              that.hide(settings, $toast, 'timeout');\n\n              if (typeof callback === 'function') {\n                callback.apply(that);\n              }\n            }\n          }, settings.time.REMAINING);\n          that.setSetting(ref, 'time', settings.time);\n        } else {\n          this.start();\n        }\n      },\n      reset: function () {\n        clearTimeout(settings.time.TIMER);\n        delete settings.time.REMAINING;\n        that.setSetting(ref, 'time', settings.time);\n        $toast.classList.add(PLUGIN_NAME + '-reseted');\n        $toast.classList.remove(PLUGIN_NAME + '-paused');\n\n        if ($elem !== null) {\n          $elem.style.transition = 'none';\n          $elem.style.width = '100%';\n        }\n\n        if (typeof callback === 'function') {\n          setTimeout(function () {\n            callback.apply(that);\n          }, 10);\n        }\n      }\n    };\n  };\n  /**\r\n   * Close the specific Toast\r\n   * @public\r\n   * @param {Object} options User settings\r\n   */\n\n\n  $iziToast.hide = function (options, $toast, closedBy) {\n    if (typeof $toast != 'object') {\n      $toast = document.querySelector($toast);\n    }\n\n    var that = this,\n        settings = extend(this.children[$toast.getAttribute('data-iziToast-ref')], options || {});\n    settings.closedBy = closedBy || null;\n    delete settings.time.REMAINING;\n    $toast.classList.add(PLUGIN_NAME + '-closing'); // Overlay\n\n    (function () {\n      var $overlay = document.querySelector('.' + PLUGIN_NAME + '-overlay');\n\n      if ($overlay !== null) {\n        var refs = $overlay.getAttribute('data-iziToast-ref');\n        refs = refs.split(',');\n        var index = refs.indexOf(String(settings.ref));\n\n        if (index !== -1) {\n          refs.splice(index, 1);\n        }\n\n        $overlay.setAttribute('data-iziToast-ref', refs.join());\n\n        if (refs.length === 0) {\n          $overlay.classList.remove('fadeIn');\n          $overlay.classList.add('fadeOut');\n          setTimeout(function () {\n            $overlay.remove();\n          }, 700);\n        }\n      }\n    })();\n\n    if (settings.transitionIn) {\n      $toast.classList.remove(settings.transitionIn);\n    }\n\n    if (settings.transitionInMobile) {\n      $toast.classList.remove(settings.transitionInMobile);\n    }\n\n    if (ISMOBILE || window.innerWidth <= MOBILEWIDTH) {\n      if (settings.transitionOutMobile) $toast.classList.add(settings.transitionOutMobile);\n    } else {\n      if (settings.transitionOut) $toast.classList.add(settings.transitionOut);\n    }\n\n    var H = $toast.parentNode.offsetHeight;\n    $toast.parentNode.style.height = H + 'px';\n    $toast.style.pointerEvents = 'none';\n\n    if (!ISMOBILE || window.innerWidth > MOBILEWIDTH) {\n      $toast.parentNode.style.transitionDelay = '0.2s';\n    }\n\n    try {\n      var event = new CustomEvent(PLUGIN_NAME + '-closing', {\n        detail: settings,\n        bubbles: true,\n        cancelable: true\n      });\n      document.dispatchEvent(event);\n    } catch (ex) {\n      console.warn(ex);\n    }\n\n    setTimeout(function () {\n      $toast.parentNode.style.height = '0px';\n      $toast.parentNode.style.overflow = '';\n      setTimeout(function () {\n        delete that.children[settings.ref];\n        $toast.parentNode.remove();\n\n        try {\n          var event = new CustomEvent(PLUGIN_NAME + '-closed', {\n            detail: settings,\n            bubbles: true,\n            cancelable: true\n          });\n          document.dispatchEvent(event);\n        } catch (ex) {\n          console.warn(ex);\n        }\n\n        if (typeof settings.onClosed !== 'undefined') {\n          settings.onClosed.apply(null, [settings, $toast, closedBy]);\n        }\n      }, 1000);\n    }, 200);\n\n    if (typeof settings.onClosing !== 'undefined') {\n      settings.onClosing.apply(null, [settings, $toast, closedBy]);\n    }\n  };\n  /**\r\n   * Create and show the Toast\r\n   * @public\r\n   * @param {Object} options User settings\r\n   */\n\n\n  $iziToast.show = function (options) {\n    var that = this; // Merge user options with defaults\n\n    var settings = extend(CONFIG, options || {});\n    settings = extend(defaults, settings);\n    settings.time = {};\n\n    if (settings.id === null) {\n      settings.id = generateId(settings.title + settings.message + settings.color);\n    }\n\n    if (settings.displayMode === 1 || settings.displayMode == 'once') {\n      try {\n        if (document.querySelectorAll('.' + PLUGIN_NAME + '#' + settings.id).length > 0) {\n          return false;\n        }\n      } catch (exc) {\n        console.warn('[' + PLUGIN_NAME + '] Could not find an element with this selector: ' + '#' + settings.id + '. Try to set an valid id.');\n      }\n    }\n\n    if (settings.displayMode === 2 || settings.displayMode == 'replace') {\n      try {\n        forEach(document.querySelectorAll('.' + PLUGIN_NAME + '#' + settings.id), function (element, index) {\n          that.hide(settings, element, 'replaced');\n        });\n      } catch (exc) {\n        console.warn('[' + PLUGIN_NAME + '] Could not find an element with this selector: ' + '#' + settings.id + '. Try to set an valid id.');\n      }\n    }\n\n    settings.ref = new Date().getTime() + Math.floor(Math.random() * 10000000 + 1);\n    $iziToast.children[settings.ref] = settings;\n    var $DOM = {\n      body: document.querySelector('body'),\n      overlay: document.createElement('div'),\n      toast: document.createElement('div'),\n      toastBody: document.createElement('div'),\n      toastTexts: document.createElement('div'),\n      toastCapsule: document.createElement('div'),\n      cover: document.createElement('div'),\n      buttons: document.createElement('div'),\n      inputs: document.createElement('div'),\n      icon: !settings.iconUrl ? document.createElement('i') : document.createElement('img'),\n      wrapper: null\n    };\n    $DOM.toast.setAttribute('data-iziToast-ref', settings.ref);\n    $DOM.toast.appendChild($DOM.toastBody);\n    $DOM.toastCapsule.appendChild($DOM.toast); // CSS Settings\n\n    (function () {\n      $DOM.toast.classList.add(PLUGIN_NAME);\n      $DOM.toast.classList.add(PLUGIN_NAME + '-opening');\n      $DOM.toastCapsule.classList.add(PLUGIN_NAME + '-capsule');\n      $DOM.toastBody.classList.add(PLUGIN_NAME + '-body');\n      $DOM.toastTexts.classList.add(PLUGIN_NAME + '-texts');\n\n      if (ISMOBILE || window.innerWidth <= MOBILEWIDTH) {\n        if (settings.transitionInMobile) $DOM.toast.classList.add(settings.transitionInMobile);\n      } else {\n        if (settings.transitionIn) $DOM.toast.classList.add(settings.transitionIn);\n      }\n\n      if (settings.class) {\n        var classes = settings.class.split(' ');\n        forEach(classes, function (value, index) {\n          $DOM.toast.classList.add(value);\n        });\n      }\n\n      if (settings.id) {\n        $DOM.toast.id = settings.id;\n      }\n\n      if (settings.rtl) {\n        $DOM.toast.classList.add(PLUGIN_NAME + '-rtl');\n        $DOM.toast.setAttribute('dir', 'rtl');\n      }\n\n      if (settings.layout > 1) {\n        $DOM.toast.classList.add(PLUGIN_NAME + '-layout' + settings.layout);\n      }\n\n      if (settings.balloon) {\n        $DOM.toast.classList.add(PLUGIN_NAME + '-balloon');\n      }\n\n      if (settings.maxWidth) {\n        if (!isNaN(settings.maxWidth)) {\n          $DOM.toast.style.maxWidth = settings.maxWidth + 'px';\n        } else {\n          $DOM.toast.style.maxWidth = settings.maxWidth;\n        }\n      }\n\n      if (settings.theme !== '' || settings.theme !== 'light') {\n        $DOM.toast.classList.add(PLUGIN_NAME + '-theme-' + settings.theme);\n      }\n\n      if (settings.color) {\n        //#, rgb, rgba, hsl\n        if (isColor(settings.color)) {\n          $DOM.toast.style.background = settings.color;\n        } else {\n          $DOM.toast.classList.add(PLUGIN_NAME + '-color-' + settings.color);\n        }\n      }\n\n      if (settings.backgroundColor) {\n        $DOM.toast.style.background = settings.backgroundColor;\n\n        if (settings.balloon) {\n          $DOM.toast.style.borderColor = settings.backgroundColor;\n        }\n      }\n    })(); // Cover image\n\n\n    (function () {\n      if (settings.image) {\n        $DOM.cover.classList.add(PLUGIN_NAME + '-cover');\n        $DOM.cover.style.width = settings.imageWidth + 'px';\n\n        if (isBase64(settings.image.replace(/ /g, ''))) {\n          $DOM.cover.style.backgroundImage = 'url(data:image/png;base64,' + settings.image.replace(/ /g, '') + ')';\n        } else {\n          $DOM.cover.style.backgroundImage = 'url(' + settings.image + ')';\n        }\n\n        if (settings.rtl) {\n          $DOM.toastBody.style.marginRight = settings.imageWidth + 10 + 'px';\n        } else {\n          $DOM.toastBody.style.marginLeft = settings.imageWidth + 10 + 'px';\n        }\n\n        $DOM.toast.appendChild($DOM.cover);\n      }\n    })(); // Button close\n\n\n    (function () {\n      if (settings.close) {\n        $DOM.buttonClose = document.createElement('button');\n        $DOM.buttonClose.type = 'button';\n        $DOM.buttonClose.classList.add(PLUGIN_NAME + '-close');\n        $DOM.buttonClose.addEventListener('click', function (e) {\n          var button = e.target;\n          that.hide(settings, $DOM.toast, 'button');\n        });\n        $DOM.toast.appendChild($DOM.buttonClose);\n      } else {\n        if (settings.rtl) {\n          $DOM.toast.style.paddingLeft = '18px';\n        } else {\n          $DOM.toast.style.paddingRight = '18px';\n        }\n      }\n    })(); // Progress Bar & Timeout\n\n\n    (function () {\n      if (settings.progressBar) {\n        $DOM.progressBar = document.createElement('div');\n        $DOM.progressBarDiv = document.createElement('div');\n        $DOM.progressBar.classList.add(PLUGIN_NAME + '-progressbar');\n        $DOM.progressBarDiv.style.background = settings.progressBarColor;\n        $DOM.progressBar.appendChild($DOM.progressBarDiv);\n        $DOM.toast.appendChild($DOM.progressBar);\n      }\n\n      if (settings.timeout) {\n        if (settings.pauseOnHover && !settings.resetOnHover) {\n          $DOM.toast.addEventListener('mouseenter', function (e) {\n            that.progress(settings, $DOM.toast).pause();\n          });\n          $DOM.toast.addEventListener('mouseleave', function (e) {\n            that.progress(settings, $DOM.toast).resume();\n          });\n        }\n\n        if (settings.resetOnHover) {\n          $DOM.toast.addEventListener('mouseenter', function (e) {\n            that.progress(settings, $DOM.toast).reset();\n          });\n          $DOM.toast.addEventListener('mouseleave', function (e) {\n            that.progress(settings, $DOM.toast).start();\n          });\n        }\n      }\n    })(); // Icon\n\n\n    (function () {\n      if (settings.iconUrl) {\n        $DOM.icon.setAttribute('class', PLUGIN_NAME + '-icon');\n        $DOM.icon.setAttribute('src', settings.iconUrl);\n      } else if (settings.icon) {\n        $DOM.icon.setAttribute('class', PLUGIN_NAME + '-icon ' + settings.icon);\n\n        if (settings.iconText) {\n          $DOM.icon.appendChild(document.createTextNode(settings.iconText));\n        }\n\n        if (settings.iconColor) {\n          $DOM.icon.style.color = settings.iconColor;\n        }\n      }\n\n      if (settings.icon || settings.iconUrl) {\n        if (settings.rtl) {\n          $DOM.toastBody.style.paddingRight = '33px';\n        } else {\n          $DOM.toastBody.style.paddingLeft = '33px';\n        }\n\n        $DOM.toastBody.appendChild($DOM.icon);\n      }\n    })(); // Title & Message\n\n\n    (function () {\n      if (settings.title.length > 0) {\n        $DOM.strong = document.createElement('strong');\n        $DOM.strong.classList.add(PLUGIN_NAME + '-title');\n        $DOM.strong.appendChild(createFragElem(settings.title));\n        $DOM.toastTexts.appendChild($DOM.strong);\n\n        if (settings.titleColor) {\n          $DOM.strong.style.color = settings.titleColor;\n        }\n\n        if (settings.titleSize) {\n          if (!isNaN(settings.titleSize)) {\n            $DOM.strong.style.fontSize = settings.titleSize + 'px';\n          } else {\n            $DOM.strong.style.fontSize = settings.titleSize;\n          }\n        }\n\n        if (settings.titleLineHeight) {\n          if (!isNaN(settings.titleSize)) {\n            $DOM.strong.style.lineHeight = settings.titleLineHeight + 'px';\n          } else {\n            $DOM.strong.style.lineHeight = settings.titleLineHeight;\n          }\n        }\n      }\n\n      if (settings.message.length > 0) {\n        $DOM.p = document.createElement('p');\n        $DOM.p.classList.add(PLUGIN_NAME + '-message');\n        $DOM.p.appendChild(createFragElem(settings.message));\n        $DOM.toastTexts.appendChild($DOM.p);\n\n        if (settings.messageColor) {\n          $DOM.p.style.color = settings.messageColor;\n        }\n\n        if (settings.messageSize) {\n          if (!isNaN(settings.titleSize)) {\n            $DOM.p.style.fontSize = settings.messageSize + 'px';\n          } else {\n            $DOM.p.style.fontSize = settings.messageSize;\n          }\n        }\n\n        if (settings.messageLineHeight) {\n          if (!isNaN(settings.titleSize)) {\n            $DOM.p.style.lineHeight = settings.messageLineHeight + 'px';\n          } else {\n            $DOM.p.style.lineHeight = settings.messageLineHeight;\n          }\n        }\n      }\n\n      if (settings.title.length > 0 && settings.message.length > 0) {\n        if (settings.rtl) {\n          $DOM.strong.style.marginLeft = '10px';\n        } else if (settings.layout !== 2 && !settings.rtl) {\n          $DOM.strong.style.marginRight = '10px';\n        }\n      }\n    })();\n\n    $DOM.toastBody.appendChild($DOM.toastTexts); // Inputs\n\n    var $inputs;\n\n    (function () {\n      if (settings.inputs.length > 0) {\n        $DOM.inputs.classList.add(PLUGIN_NAME + '-inputs');\n        forEach(settings.inputs, function (value, index) {\n          $DOM.inputs.appendChild(createFragElem(value[0]));\n          $inputs = $DOM.inputs.childNodes;\n          $inputs[index].classList.add(PLUGIN_NAME + '-inputs-child');\n\n          if (value[3]) {\n            setTimeout(function () {\n              $inputs[index].focus();\n            }, 300);\n          }\n\n          $inputs[index].addEventListener(value[1], function (e) {\n            var ts = value[2];\n            return ts(that, $DOM.toast, this, e);\n          });\n        });\n        $DOM.toastBody.appendChild($DOM.inputs);\n      }\n    })(); // Buttons\n\n\n    (function () {\n      if (settings.buttons.length > 0) {\n        $DOM.buttons.classList.add(PLUGIN_NAME + '-buttons');\n        forEach(settings.buttons, function (value, index) {\n          $DOM.buttons.appendChild(createFragElem(value[0]));\n          var $btns = $DOM.buttons.childNodes;\n          $btns[index].classList.add(PLUGIN_NAME + '-buttons-child');\n\n          if (value[2]) {\n            setTimeout(function () {\n              $btns[index].focus();\n            }, 300);\n          }\n\n          $btns[index].addEventListener('click', function (e) {\n            e.preventDefault();\n            var ts = value[1];\n            return ts(that, $DOM.toast, this, e, $inputs);\n          });\n        });\n      }\n\n      $DOM.toastBody.appendChild($DOM.buttons);\n    })();\n\n    if (settings.message.length > 0 && (settings.inputs.length > 0 || settings.buttons.length > 0)) {\n      $DOM.p.style.marginBottom = '0';\n    }\n\n    if (settings.inputs.length > 0 || settings.buttons.length > 0) {\n      if (settings.rtl) {\n        $DOM.toastTexts.style.marginLeft = '10px';\n      } else {\n        $DOM.toastTexts.style.marginRight = '10px';\n      }\n\n      if (settings.inputs.length > 0 && settings.buttons.length > 0) {\n        if (settings.rtl) {\n          $DOM.inputs.style.marginLeft = '8px';\n        } else {\n          $DOM.inputs.style.marginRight = '8px';\n        }\n      }\n    } // Wrap\n\n\n    (function () {\n      $DOM.toastCapsule.style.visibility = 'hidden';\n      setTimeout(function () {\n        var H = $DOM.toast.offsetHeight;\n        var style = $DOM.toast.currentStyle || window.getComputedStyle($DOM.toast);\n        var marginTop = style.marginTop;\n        marginTop = marginTop.split('px');\n        marginTop = parseInt(marginTop[0]);\n        var marginBottom = style.marginBottom;\n        marginBottom = marginBottom.split('px');\n        marginBottom = parseInt(marginBottom[0]);\n        $DOM.toastCapsule.style.visibility = '';\n        $DOM.toastCapsule.style.height = H + marginBottom + marginTop + 'px';\n        setTimeout(function () {\n          $DOM.toastCapsule.style.height = 'auto';\n\n          if (settings.target) {\n            $DOM.toastCapsule.style.overflow = 'visible';\n          }\n        }, 500);\n\n        if (settings.timeout) {\n          that.progress(settings, $DOM.toast).start();\n        }\n      }, 100);\n    })(); // Target\n\n\n    (function () {\n      var position = settings.position;\n\n      if (settings.target) {\n        $DOM.wrapper = document.querySelector(settings.target);\n        $DOM.wrapper.classList.add(PLUGIN_NAME + '-target');\n\n        if (settings.targetFirst) {\n          $DOM.wrapper.insertBefore($DOM.toastCapsule, $DOM.wrapper.firstChild);\n        } else {\n          $DOM.wrapper.appendChild($DOM.toastCapsule);\n        }\n      } else {\n        if (POSITIONS.indexOf(settings.position) == -1) {\n          console.warn('[' + PLUGIN_NAME + '] Incorrect position.\\nIt can be › ' + POSITIONS);\n          return;\n        }\n\n        if (ISMOBILE || window.innerWidth <= MOBILEWIDTH) {\n          if (settings.position == 'bottomLeft' || settings.position == 'bottomRight' || settings.position == 'bottomCenter') {\n            position = PLUGIN_NAME + '-wrapper-bottomCenter';\n          } else if (settings.position == 'topLeft' || settings.position == 'topRight' || settings.position == 'topCenter') {\n            position = PLUGIN_NAME + '-wrapper-topCenter';\n          } else {\n            position = PLUGIN_NAME + '-wrapper-center';\n          }\n        } else {\n          position = PLUGIN_NAME + '-wrapper-' + position;\n        }\n\n        $DOM.wrapper = document.querySelector('.' + PLUGIN_NAME + '-wrapper.' + position);\n\n        if (!$DOM.wrapper) {\n          $DOM.wrapper = document.createElement('div');\n          $DOM.wrapper.classList.add(PLUGIN_NAME + '-wrapper');\n          $DOM.wrapper.classList.add(position);\n          document.body.appendChild($DOM.wrapper);\n        }\n\n        if (settings.position == 'topLeft' || settings.position == 'topCenter' || settings.position == 'topRight') {\n          $DOM.wrapper.insertBefore($DOM.toastCapsule, $DOM.wrapper.firstChild);\n        } else {\n          $DOM.wrapper.appendChild($DOM.toastCapsule);\n        }\n      }\n\n      if (!isNaN(settings.zindex)) {\n        $DOM.wrapper.style.zIndex = settings.zindex;\n      } else {\n        console.warn('[' + PLUGIN_NAME + '] Invalid zIndex.');\n      }\n    })(); // Overlay\n\n\n    (function () {\n      if (settings.overlay) {\n        if (document.querySelector('.' + PLUGIN_NAME + '-overlay.fadeIn') !== null) {\n          $DOM.overlay = document.querySelector('.' + PLUGIN_NAME + '-overlay');\n          $DOM.overlay.setAttribute('data-iziToast-ref', $DOM.overlay.getAttribute('data-iziToast-ref') + ',' + settings.ref);\n\n          if (!isNaN(settings.zindex) && settings.zindex !== null) {\n            $DOM.overlay.style.zIndex = settings.zindex - 1;\n          }\n        } else {\n          $DOM.overlay.classList.add(PLUGIN_NAME + '-overlay');\n          $DOM.overlay.classList.add('fadeIn');\n          $DOM.overlay.style.background = settings.overlayColor;\n          $DOM.overlay.setAttribute('data-iziToast-ref', settings.ref);\n\n          if (!isNaN(settings.zindex) && settings.zindex !== null) {\n            $DOM.overlay.style.zIndex = settings.zindex - 1;\n          }\n\n          document.querySelector('body').appendChild($DOM.overlay);\n        }\n\n        if (settings.overlayClose) {\n          $DOM.overlay.removeEventListener('click', {});\n          $DOM.overlay.addEventListener('click', function (e) {\n            that.hide(settings, $DOM.toast, 'overlay');\n          });\n        } else {\n          $DOM.overlay.removeEventListener('click', {});\n        }\n      }\n    })(); // Inside animations\n\n\n    (function () {\n      if (settings.animateInside) {\n        $DOM.toast.classList.add(PLUGIN_NAME + '-animateInside');\n        var animationTimes = [200, 100, 300];\n\n        if (settings.transitionIn == 'bounceInLeft' || settings.transitionIn == 'bounceInRight') {\n          animationTimes = [400, 200, 400];\n        }\n\n        if (settings.title.length > 0) {\n          setTimeout(function () {\n            $DOM.strong.classList.add('slideIn');\n          }, animationTimes[0]);\n        }\n\n        if (settings.message.length > 0) {\n          setTimeout(function () {\n            $DOM.p.classList.add('slideIn');\n          }, animationTimes[1]);\n        }\n\n        if (settings.icon || settings.iconUrl) {\n          setTimeout(function () {\n            $DOM.icon.classList.add('revealIn');\n          }, animationTimes[2]);\n        }\n\n        var counter = 150;\n\n        if (settings.buttons.length > 0 && $DOM.buttons) {\n          setTimeout(function () {\n            forEach($DOM.buttons.childNodes, function (element, index) {\n              setTimeout(function () {\n                element.classList.add('revealIn');\n              }, counter);\n              counter = counter + 150;\n            });\n          }, settings.inputs.length > 0 ? 150 : 0);\n        }\n\n        if (settings.inputs.length > 0 && $DOM.inputs) {\n          counter = 150;\n          forEach($DOM.inputs.childNodes, function (element, index) {\n            setTimeout(function () {\n              element.classList.add('revealIn');\n            }, counter);\n            counter = counter + 150;\n          });\n        }\n      }\n    })();\n\n    settings.onOpening.apply(null, [settings, $DOM.toast]);\n\n    try {\n      var event = new CustomEvent(PLUGIN_NAME + '-opening', {\n        detail: settings,\n        bubbles: true,\n        cancelable: true\n      });\n      document.dispatchEvent(event);\n    } catch (ex) {\n      console.warn(ex);\n    }\n\n    setTimeout(function () {\n      $DOM.toast.classList.remove(PLUGIN_NAME + '-opening');\n      $DOM.toast.classList.add(PLUGIN_NAME + '-opened');\n\n      try {\n        var event = new CustomEvent(PLUGIN_NAME + '-opened', {\n          detail: settings,\n          bubbles: true,\n          cancelable: true\n        });\n        document.dispatchEvent(event);\n      } catch (ex) {\n        console.warn(ex);\n      }\n\n      settings.onOpened.apply(null, [settings, $DOM.toast]);\n    }, 1000);\n\n    if (settings.drag) {\n      if (ACCEPTSTOUCH) {\n        $DOM.toast.addEventListener('touchstart', function (e) {\n          drag.startMoving(this, that, settings, e);\n        }, false);\n        $DOM.toast.addEventListener('touchend', function (e) {\n          drag.stopMoving(this, e);\n        }, false);\n      } else {\n        $DOM.toast.addEventListener('mousedown', function (e) {\n          e.preventDefault();\n          drag.startMoving(this, that, settings, e);\n        }, false);\n        $DOM.toast.addEventListener('mouseup', function (e) {\n          e.preventDefault();\n          drag.stopMoving(this, e);\n        }, false);\n      }\n    }\n\n    if (settings.closeOnEscape) {\n      document.addEventListener('keyup', function (evt) {\n        evt = evt || window.event;\n\n        if (evt.keyCode == 27) {\n          that.hide(settings, $DOM.toast, 'esc');\n        }\n      });\n    }\n\n    if (settings.closeOnClick) {\n      $DOM.toast.addEventListener('click', function (evt) {\n        that.hide(settings, $DOM.toast, 'toast');\n      });\n    }\n\n    that.toast = $DOM.toast;\n  };\n\n  return $iziToast;\n});","map":null,"metadata":{},"sourceType":"script"}