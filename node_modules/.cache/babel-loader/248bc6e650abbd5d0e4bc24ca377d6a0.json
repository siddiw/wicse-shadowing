{"ast":null,"code":"!function () {\n  function l(l, n) {\n    var u = l.split(\".\"),\n        t = Y;\n    u[0] in t || !t.execScript || t.execScript(\"var \" + u[0]);\n\n    for (var e; u.length && (e = u.shift());) u.length || void 0 === n ? t = t[e] ? t[e] : t[e] = {} : t[e] = n;\n  }\n\n  function n(l, n) {\n    function u() {}\n\n    u.prototype = n.prototype, l.M = n.prototype, l.prototype = new u(), l.prototype.constructor = l, l.N = function (l, u, t) {\n      for (var e = Array(arguments.length - 2), r = 2; r < arguments.length; r++) e[r - 2] = arguments[r];\n\n      return n.prototype[u].apply(l, e);\n    };\n  }\n\n  function u(l, n) {\n    null != l && this.a.apply(this, arguments);\n  }\n\n  function t(l) {\n    l.b = \"\";\n  }\n\n  function e(l, n) {\n    l.sort(n || r);\n  }\n\n  function r(l, n) {\n    return l > n ? 1 : l < n ? -1 : 0;\n  }\n\n  function i(l) {\n    var n,\n        u = [],\n        t = 0;\n\n    for (n in l) u[t++] = l[n];\n\n    return u;\n  }\n\n  function a(l, n) {\n    this.b = l, this.a = {};\n\n    for (var u = 0; u < n.length; u++) {\n      var t = n[u];\n      this.a[t.b] = t;\n    }\n  }\n\n  function d(l) {\n    return l = i(l.a), e(l, function (l, n) {\n      return l.b - n.b;\n    }), l;\n  }\n\n  function o(l, n) {\n    switch (this.b = l, this.g = !!n.v, this.a = n.c, this.i = n.type, this.h = !1, this.a) {\n      case O:\n      case H:\n      case q:\n      case X:\n      case k:\n      case L:\n      case J:\n        this.h = !0;\n    }\n\n    this.f = n.defaultValue;\n  }\n\n  function s() {\n    this.a = {}, this.f = this.j().a, this.b = this.g = null;\n  }\n\n  function f(l, n) {\n    for (var u = d(l.j()), t = 0; t < u.length; t++) {\n      var e = u[t],\n          r = e.b;\n\n      if (null != n.a[r]) {\n        l.b && delete l.b[e.b];\n        var i = 11 == e.a || 10 == e.a;\n        if (e.g) for (var e = p(n, r) || [], a = 0; a < e.length; a++) {\n          var o = l,\n              s = r,\n              c = i ? e[a].clone() : e[a];\n          o.a[s] || (o.a[s] = []), o.a[s].push(c), o.b && delete o.b[s];\n        } else e = p(n, r), i ? (i = p(l, r)) ? f(i, e) : m(l, r, e.clone()) : m(l, r, e);\n      }\n    }\n  }\n\n  function p(l, n) {\n    var u = l.a[n];\n    if (null == u) return null;\n\n    if (l.g) {\n      if (!(n in l.b)) {\n        var t = l.g,\n            e = l.f[n];\n        if (null != u) if (e.g) {\n          for (var r = [], i = 0; i < u.length; i++) r[i] = t.b(e, u[i]);\n\n          u = r;\n        } else u = t.b(e, u);\n        return l.b[n] = u;\n      }\n\n      return l.b[n];\n    }\n\n    return u;\n  }\n\n  function c(l, n, u) {\n    var t = p(l, n);\n    return l.f[n].g ? t[u || 0] : t;\n  }\n\n  function h(l, n) {\n    var u;\n    if (null != l.a[n]) u = c(l, n, void 0);else l: {\n      if (u = l.f[n], void 0 === u.f) {\n        var t = u.i;\n        if (t === Boolean) u.f = !1;else if (t === Number) u.f = 0;else {\n          if (t !== String) {\n            u = new t();\n            break l;\n          }\n\n          u.f = u.h ? \"0\" : \"\";\n        }\n      }\n\n      u = u.f;\n    }\n    return u;\n  }\n\n  function g(l, n) {\n    return l.f[n].g ? null != l.a[n] ? l.a[n].length : 0 : null != l.a[n] ? 1 : 0;\n  }\n\n  function m(l, n, u) {\n    l.a[n] = u, l.b && (l.b[n] = u);\n  }\n\n  function b(l, n) {\n    var u,\n        t = [];\n\n    for (u in n) 0 != u && t.push(new o(u, n[u]));\n\n    return new a(l, t);\n  }\n  /*\n  Protocol Buffer 2 Copyright 2008 Google Inc.\n  All other code copyright its respective owners.\n  Copyright (C) 2010 The Libphonenumber Authors\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n  http://www.apache.org/licenses/LICENSE-2.0\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n  */\n\n\n  function y() {\n    s.call(this);\n  }\n\n  function v() {\n    s.call(this);\n  }\n\n  function S() {\n    s.call(this);\n  }\n\n  function _() {}\n\n  function w() {}\n\n  function A() {}\n  /*\n  Copyright (C) 2010 The Libphonenumber Authors.\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n  http://www.apache.org/licenses/LICENSE-2.0\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n  */\n\n\n  function x() {\n    this.a = {};\n  }\n\n  function B(l) {\n    return 0 == l.length || rl.test(l);\n  }\n\n  function C(l, n) {\n    if (null == n) return null;\n    n = n.toUpperCase();\n    var u = l.a[n];\n\n    if (null == u) {\n      if (u = nl[n], null == u) return null;\n      u = new A().a(S.j(), u), l.a[n] = u;\n    }\n\n    return u;\n  }\n\n  function M(l) {\n    return l = ll[l], null == l ? \"ZZ\" : l[0];\n  }\n\n  function N(l) {\n    this.H = RegExp(\" \"), this.C = \"\", this.m = new u(), this.w = \"\", this.i = new u(), this.u = new u(), this.l = !0, this.A = this.o = this.F = !1, this.G = x.b(), this.s = 0, this.b = new u(), this.B = !1, this.h = \"\", this.a = new u(), this.f = [], this.D = l, this.J = this.g = D(this, this.D);\n  }\n\n  function D(l, n) {\n    var u;\n\n    if (null != n && isNaN(n) && n.toUpperCase() in nl) {\n      if (u = C(l.G, n), null == u) throw Error(\"Invalid region code: \" + n);\n      u = h(u, 10);\n    } else u = 0;\n\n    return u = C(l.G, M(u)), null != u ? u : il;\n  }\n\n  function G(l) {\n    for (var n = l.f.length, u = 0; u < n; ++u) {\n      var e = l.f[u],\n          r = h(e, 1);\n      if (l.w == r) return !1;\n      var i;\n      i = l;\n      var a = e,\n          d = h(a, 1);\n      if (-1 != d.indexOf(\"|\")) i = !1;else {\n        d = d.replace(al, \"\\\\d\"), d = d.replace(dl, \"\\\\d\"), t(i.m);\n        var o;\n        o = i;\n        var a = h(a, 2),\n            s = \"999999999999999\".match(d)[0];\n        s.length < o.a.b.length ? o = \"\" : (o = s.replace(new RegExp(d, \"g\"), a), o = o.replace(RegExp(\"9\", \"g\"), \" \")), 0 < o.length ? (i.m.a(o), i = !0) : i = !1;\n      }\n      if (i) return l.w = r, l.B = sl.test(c(e, 4)), l.s = 0, !0;\n    }\n\n    return l.l = !1;\n  }\n\n  function j(l, n) {\n    for (var u = [], t = n.length - 3, e = l.f.length, r = 0; r < e; ++r) {\n      var i = l.f[r];\n      0 == g(i, 3) ? u.push(l.f[r]) : (i = c(i, 3, Math.min(t, g(i, 3) - 1)), 0 == n.search(i) && u.push(l.f[r]));\n    }\n\n    l.f = u;\n  }\n\n  function I(l, n) {\n    l.i.a(n);\n    var u = n;\n\n    if (el.test(u) || 1 == l.i.b.length && tl.test(u)) {\n      var e,\n          u = n;\n      \"+\" == u ? (e = u, l.u.a(u)) : (e = ul[u], l.u.a(e), l.a.a(e)), n = e;\n    } else l.l = !1, l.F = !0;\n\n    if (!l.l) {\n      if (!l.F) if (F(l)) {\n        if (U(l)) return V(l);\n      } else if (0 < l.h.length && (u = l.a.toString(), t(l.a), l.a.a(l.h), l.a.a(u), u = l.b.toString(), e = u.lastIndexOf(l.h), t(l.b), l.b.a(u.substring(0, e))), l.h != P(l)) return l.b.a(\" \"), V(l);\n      return l.i.toString();\n    }\n\n    switch (l.u.b.length) {\n      case 0:\n      case 1:\n      case 2:\n        return l.i.toString();\n\n      case 3:\n        if (!F(l)) return l.h = P(l), E(l);\n        l.A = !0;\n\n      default:\n        return l.A ? (U(l) && (l.A = !1), l.b.toString() + l.a.toString()) : 0 < l.f.length ? (u = K(l, n), e = $(l), 0 < e.length ? e : (j(l, l.a.toString()), G(l) ? T(l) : l.l ? R(l, u) : l.i.toString())) : E(l);\n    }\n  }\n\n  function V(l) {\n    return l.l = !0, l.A = !1, l.f = [], l.s = 0, t(l.m), l.w = \"\", E(l);\n  }\n\n  function $(l) {\n    for (var n = l.a.toString(), u = l.f.length, t = 0; t < u; ++t) {\n      var e = l.f[t],\n          r = h(e, 1);\n      if (new RegExp(\"^(?:\" + r + \")$\").test(n)) return l.B = sl.test(c(e, 4)), n = n.replace(new RegExp(r, \"g\"), c(e, 2)), R(l, n);\n    }\n\n    return \"\";\n  }\n\n  function R(l, n) {\n    var u = l.b.b.length;\n    return l.B && 0 < u && \" \" != l.b.toString().charAt(u - 1) ? l.b + \" \" + n : l.b + n;\n  }\n\n  function E(l) {\n    var n = l.a.toString();\n\n    if (3 <= n.length) {\n      for (var u = l.o && 0 == l.h.length && 0 < g(l.g, 20) ? p(l.g, 20) || [] : p(l.g, 19) || [], t = u.length, e = 0; e < t; ++e) {\n        var r = u[e];\n        0 < l.h.length && B(h(r, 4)) && !c(r, 6) && null == r.a[5] || (0 != l.h.length || l.o || B(h(r, 4)) || c(r, 6)) && ol.test(h(r, 2)) && l.f.push(r);\n      }\n\n      return j(l, n), n = $(l), 0 < n.length ? n : G(l) ? T(l) : l.i.toString();\n    }\n\n    return R(l, n);\n  }\n\n  function T(l) {\n    var n = l.a.toString(),\n        u = n.length;\n\n    if (0 < u) {\n      for (var t = \"\", e = 0; e < u; e++) t = K(l, n.charAt(e));\n\n      return l.l ? R(l, t) : l.i.toString();\n    }\n\n    return l.b.toString();\n  }\n\n  function P(l) {\n    var n,\n        u = l.a.toString(),\n        e = 0;\n    return 1 != c(l.g, 10) ? n = !1 : (n = l.a.toString(), n = \"1\" == n.charAt(0) && \"0\" != n.charAt(1) && \"1\" != n.charAt(1)), n ? (e = 1, l.b.a(\"1\").a(\" \"), l.o = !0) : null != l.g.a[15] && (n = new RegExp(\"^(?:\" + c(l.g, 15) + \")\"), n = u.match(n), null != n && null != n[0] && 0 < n[0].length && (l.o = !0, e = n[0].length, l.b.a(u.substring(0, e)))), t(l.a), l.a.a(u.substring(e)), u.substring(0, e);\n  }\n\n  function F(l) {\n    var n = l.u.toString(),\n        u = new RegExp(\"^(?:\\\\+|\" + c(l.g, 11) + \")\"),\n        u = n.match(u);\n    return null != u && null != u[0] && 0 < u[0].length && (l.o = !0, u = u[0].length, t(l.a), l.a.a(n.substring(u)), t(l.b), l.b.a(n.substring(0, u)), \"+\" != n.charAt(0) && l.b.a(\" \"), !0);\n  }\n\n  function U(l) {\n    if (0 == l.a.b.length) return !1;\n    var n,\n        e = new u();\n\n    l: {\n      if (n = l.a.toString(), 0 != n.length && \"0\" != n.charAt(0)) for (var r, i = n.length, a = 1; 3 >= a && a <= i; ++a) if (r = parseInt(n.substring(0, a), 10), r in ll) {\n        e.a(n.substring(a)), n = r;\n        break l;\n      }\n      n = 0;\n    }\n\n    return 0 != n && (t(l.a), l.a.a(e.toString()), e = M(n), \"001\" == e ? l.g = C(l.G, \"\" + n) : e != l.D && (l.g = D(l, e)), l.b.a(\"\" + n).a(\" \"), l.h = \"\", !0);\n  }\n\n  function K(l, n) {\n    var u = l.m.toString();\n\n    if (0 <= u.substring(l.s).search(l.H)) {\n      var e = u.search(l.H),\n          u = u.replace(l.H, n);\n      return t(l.m), l.m.a(u), l.s = e, u.substring(0, l.s + 1);\n    }\n\n    return 1 == l.f.length && (l.l = !1), l.w = \"\", l.i.toString();\n  }\n\n  var Y = this;\n  u.prototype.b = \"\", u.prototype.set = function (l) {\n    this.b = \"\" + l;\n  }, u.prototype.a = function (l, n, u) {\n    if (this.b += String(l), null != n) for (var t = 1; t < arguments.length; t++) this.b += arguments[t];\n    return this;\n  }, u.prototype.toString = function () {\n    return this.b;\n  };\n  var J = 1,\n      L = 2,\n      O = 3,\n      H = 4,\n      q = 6,\n      X = 16,\n      k = 18;\n  s.prototype.set = function (l, n) {\n    m(this, l.b, n);\n  }, s.prototype.clone = function () {\n    var l = new this.constructor();\n    return l != this && (l.a = {}, l.b && (l.b = {}), f(l, this)), l;\n  }, n(y, s);\n  var Z = null;\n  n(v, s);\n  var z = null;\n  n(S, s);\n  var Q = null;\n  y.prototype.j = function () {\n    var l = Z;\n    return l || (Z = l = b(y, {\n      0: {\n        name: \"NumberFormat\",\n        I: \"i18n.phonenumbers.NumberFormat\"\n      },\n      1: {\n        name: \"pattern\",\n        required: !0,\n        c: 9,\n        type: String\n      },\n      2: {\n        name: \"format\",\n        required: !0,\n        c: 9,\n        type: String\n      },\n      3: {\n        name: \"leading_digits_pattern\",\n        v: !0,\n        c: 9,\n        type: String\n      },\n      4: {\n        name: \"national_prefix_formatting_rule\",\n        c: 9,\n        type: String\n      },\n      6: {\n        name: \"national_prefix_optional_when_formatting\",\n        c: 8,\n        defaultValue: !1,\n        type: Boolean\n      },\n      5: {\n        name: \"domestic_carrier_code_formatting_rule\",\n        c: 9,\n        type: String\n      }\n    })), l;\n  }, y.j = y.prototype.j, v.prototype.j = function () {\n    var l = z;\n    return l || (z = l = b(v, {\n      0: {\n        name: \"PhoneNumberDesc\",\n        I: \"i18n.phonenumbers.PhoneNumberDesc\"\n      },\n      2: {\n        name: \"national_number_pattern\",\n        c: 9,\n        type: String\n      },\n      9: {\n        name: \"possible_length\",\n        v: !0,\n        c: 5,\n        type: Number\n      },\n      10: {\n        name: \"possible_length_local_only\",\n        v: !0,\n        c: 5,\n        type: Number\n      },\n      6: {\n        name: \"example_number\",\n        c: 9,\n        type: String\n      }\n    })), l;\n  }, v.j = v.prototype.j, S.prototype.j = function () {\n    var l = Q;\n    return l || (Q = l = b(S, {\n      0: {\n        name: \"PhoneMetadata\",\n        I: \"i18n.phonenumbers.PhoneMetadata\"\n      },\n      1: {\n        name: \"general_desc\",\n        c: 11,\n        type: v\n      },\n      2: {\n        name: \"fixed_line\",\n        c: 11,\n        type: v\n      },\n      3: {\n        name: \"mobile\",\n        c: 11,\n        type: v\n      },\n      4: {\n        name: \"toll_free\",\n        c: 11,\n        type: v\n      },\n      5: {\n        name: \"premium_rate\",\n        c: 11,\n        type: v\n      },\n      6: {\n        name: \"shared_cost\",\n        c: 11,\n        type: v\n      },\n      7: {\n        name: \"personal_number\",\n        c: 11,\n        type: v\n      },\n      8: {\n        name: \"voip\",\n        c: 11,\n        type: v\n      },\n      21: {\n        name: \"pager\",\n        c: 11,\n        type: v\n      },\n      25: {\n        name: \"uan\",\n        c: 11,\n        type: v\n      },\n      27: {\n        name: \"emergency\",\n        c: 11,\n        type: v\n      },\n      28: {\n        name: \"voicemail\",\n        c: 11,\n        type: v\n      },\n      29: {\n        name: \"short_code\",\n        c: 11,\n        type: v\n      },\n      30: {\n        name: \"standard_rate\",\n        c: 11,\n        type: v\n      },\n      31: {\n        name: \"carrier_specific\",\n        c: 11,\n        type: v\n      },\n      33: {\n        name: \"sms_services\",\n        c: 11,\n        type: v\n      },\n      24: {\n        name: \"no_international_dialling\",\n        c: 11,\n        type: v\n      },\n      9: {\n        name: \"id\",\n        required: !0,\n        c: 9,\n        type: String\n      },\n      10: {\n        name: \"country_code\",\n        c: 5,\n        type: Number\n      },\n      11: {\n        name: \"international_prefix\",\n        c: 9,\n        type: String\n      },\n      17: {\n        name: \"preferred_international_prefix\",\n        c: 9,\n        type: String\n      },\n      12: {\n        name: \"national_prefix\",\n        c: 9,\n        type: String\n      },\n      13: {\n        name: \"preferred_extn_prefix\",\n        c: 9,\n        type: String\n      },\n      15: {\n        name: \"national_prefix_for_parsing\",\n        c: 9,\n        type: String\n      },\n      16: {\n        name: \"national_prefix_transform_rule\",\n        c: 9,\n        type: String\n      },\n      18: {\n        name: \"same_mobile_and_fixed_line_pattern\",\n        c: 8,\n        defaultValue: !1,\n        type: Boolean\n      },\n      19: {\n        name: \"number_format\",\n        v: !0,\n        c: 11,\n        type: y\n      },\n      20: {\n        name: \"intl_number_format\",\n        v: !0,\n        c: 11,\n        type: y\n      },\n      22: {\n        name: \"main_country_for_code\",\n        c: 8,\n        defaultValue: !1,\n        type: Boolean\n      },\n      23: {\n        name: \"leading_digits\",\n        c: 9,\n        type: String\n      },\n      26: {\n        name: \"leading_zero_possible\",\n        c: 8,\n        defaultValue: !1,\n        type: Boolean\n      }\n    })), l;\n  }, S.j = S.prototype.j, _.prototype.a = function (l) {\n    throw new l.b(), Error(\"Unimplemented\");\n  }, _.prototype.b = function (l, n) {\n    if (11 == l.a || 10 == l.a) return n instanceof s ? n : this.a(l.i.prototype.j(), n);\n\n    if (14 == l.a) {\n      if (\"string\" == typeof n && W.test(n)) {\n        var u = Number(n);\n        if (0 < u) return u;\n      }\n\n      return n;\n    }\n\n    if (!l.h) return n;\n\n    if (u = l.i, u === String) {\n      if (\"number\" == typeof n) return String(n);\n    } else if (u === Number && \"string\" == typeof n && (\"Infinity\" === n || \"-Infinity\" === n || \"NaN\" === n || W.test(n))) return Number(n);\n\n    return n;\n  };\n  var W = /^-?[0-9]+$/;\n  n(w, _), w.prototype.a = function (l, n) {\n    var u = new l.b();\n    return u.g = this, u.a = n, u.b = {}, u;\n  }, n(A, w), A.prototype.b = function (l, n) {\n    return 8 == l.a ? !!n : _.prototype.b.apply(this, arguments);\n  }, A.prototype.a = function (l, n) {\n    return A.M.a.call(this, l, n);\n  };\n  /*\n  Copyright (C) 2010 The Libphonenumber Authors\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n  http://www.apache.org/licenses/LICENSE-2.0\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n  */\n\n  var ll = {\n    1: \"US AG AI AS BB BM BS CA DM DO GD GU JM KN KY LC MP MS PR SX TC TT VC VG VI\".split(\" \")\n  },\n      nl = {\n    AG: [null, [null, null, \"(?:268|[58]\\\\d\\\\d|900)\\\\d{7}\", null, null, null, null, null, null, [10], [7]], [null, null, \"268(?:4(?:6[0-38]|84)|56[0-2])\\\\d{4}\", null, null, null, \"2684601234\", null, null, null, [7]], [null, null, \"268(?:464|7(?:1[3-9]|2\\\\d|3[246]|64|[78][0-689]))\\\\d{4}\", null, null, null, \"2684641234\", null, null, null, [7]], [null, null, \"8(?:00|33|44|55|66|77|88)[2-9]\\\\d{6}\", null, null, null, \"8002123456\"], [null, null, \"900[2-9]\\\\d{6}\", null, null, null, \"9002123456\"], [null, null, null, null, null, null, null, null, null, [-1]], [null, null, \"5(?:00|2[12]|33|44|66|77|88)[2-9]\\\\d{6}\", null, null, null, \"5002345678\"], [null, null, \"26848[01]\\\\d{4}\", null, null, null, \"2684801234\", null, null, null, [7]], \"AG\", 1, \"011\", \"1\", null, null, \"1\", null, null, null, null, null, [null, null, \"26840[69]\\\\d{4}\", null, null, null, \"2684061234\", null, null, null, [7]], null, \"268\", [null, null, null, null, null, null, null, null, null, [-1]], [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]],\n    AI: [null, [null, null, \"(?:264|[58]\\\\d\\\\d|900)\\\\d{7}\", null, null, null, null, null, null, [10], [7]], [null, null, \"2644(?:6[12]|9[78])\\\\d{4}\", null, null, null, \"2644612345\", null, null, null, [7]], [null, null, \"264(?:235|476|5(?:3[6-9]|8[1-4])|7(?:29|72))\\\\d{4}\", null, null, null, \"2642351234\", null, null, null, [7]], [null, null, \"8(?:00|33|44|55|66|77|88)[2-9]\\\\d{6}\", null, null, null, \"8002123456\"], [null, null, \"900[2-9]\\\\d{6}\", null, null, null, \"9002123456\"], [null, null, null, null, null, null, null, null, null, [-1]], [null, null, \"5(?:00|2[12]|33|44|66|77|88)[2-9]\\\\d{6}\", null, null, null, \"5002345678\"], [null, null, null, null, null, null, null, null, null, [-1]], \"AI\", 1, \"011\", \"1\", null, null, \"1\", null, null, null, null, null, [null, null, null, null, null, null, null, null, null, [-1]], null, \"264\", [null, null, null, null, null, null, null, null, null, [-1]], [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]],\n    AS: [null, [null, null, \"(?:[58]\\\\d\\\\d|684|900)\\\\d{7}\", null, null, null, null, null, null, [10], [7]], [null, null, \"6846(?:22|33|44|55|77|88|9[19])\\\\d{4}\", null, null, null, \"6846221234\", null, null, null, [7]], [null, null, \"684(?:2(?:5[2468]|72)|7(?:3[13]|70))\\\\d{4}\", null, null, null, \"6847331234\", null, null, null, [7]], [null, null, \"8(?:00|33|44|55|66|77|88)[2-9]\\\\d{6}\", null, null, null, \"8002123456\"], [null, null, \"900[2-9]\\\\d{6}\", null, null, null, \"9002123456\"], [null, null, null, null, null, null, null, null, null, [-1]], [null, null, \"5(?:00|2[12]|33|44|66|77|88)[2-9]\\\\d{6}\", null, null, null, \"5002345678\"], [null, null, null, null, null, null, null, null, null, [-1]], \"AS\", 1, \"011\", \"1\", null, null, \"1\", null, null, null, null, null, [null, null, null, null, null, null, null, null, null, [-1]], null, \"684\", [null, null, null, null, null, null, null, null, null, [-1]], [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]],\n    BB: [null, [null, null, \"(?:246|[58]\\\\d\\\\d|900)\\\\d{7}\", null, null, null, null, null, null, [10], [7]], [null, null, \"246(?:2(?:2[78]|7[0-4])|4(?:1[024-6]|2\\\\d|3[2-9])|5(?:20|[34]\\\\d|54|7[1-3])|6(?:2\\\\d|38)|7[35]7|9(?:1[89]|63))\\\\d{4}\", null, null, null, \"2464123456\", null, null, null, [7]], [null, null, \"246(?:2(?:[356]\\\\d|4[0-57-9]|8[0-79])|45\\\\d|69[5-7]|8(?:[2-5]\\\\d|83))\\\\d{4}\", null, null, null, \"2462501234\", null, null, null, [7]], [null, null, \"8(?:00|33|44|55|66|77|88)[2-9]\\\\d{6}\", null, null, null, \"8002123456\"], [null, null, \"(?:246976|900[2-9]\\\\d\\\\d)\\\\d{4}\", null, null, null, \"9002123456\", null, null, null, [7]], [null, null, null, null, null, null, null, null, null, [-1]], [null, null, \"5(?:00|2[12]|33|44|66|77|88)[2-9]\\\\d{6}\", null, null, null, \"5002345678\"], [null, null, \"24631\\\\d{5}\", null, null, null, \"2463101234\", null, null, null, [7]], \"BB\", 1, \"011\", \"1\", null, null, \"1\", null, null, null, null, null, [null, null, null, null, null, null, null, null, null, [-1]], null, \"246\", [null, null, null, null, null, null, null, null, null, [-1]], [null, null, \"246(?:292|367|4(?:1[7-9]|3[01]|44|67)|7(?:36|53))\\\\d{4}\", null, null, null, \"2464301234\", null, null, null, [7]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]],\n    BM: [null, [null, null, \"(?:441|[58]\\\\d\\\\d|900)\\\\d{7}\", null, null, null, null, null, null, [10], [7]], [null, null, \"441(?:2(?:02|23|[3479]\\\\d|61)|[46]\\\\d\\\\d|5(?:4\\\\d|60|89)|824)\\\\d{4}\", null, null, null, \"4412345678\", null, null, null, [7]], [null, null, \"441(?:[37]\\\\d|5[0-39])\\\\d{5}\", null, null, null, \"4413701234\", null, null, null, [7]], [null, null, \"8(?:00|33|44|55|66|77|88)[2-9]\\\\d{6}\", null, null, null, \"8002123456\"], [null, null, \"900[2-9]\\\\d{6}\", null, null, null, \"9002123456\"], [null, null, null, null, null, null, null, null, null, [-1]], [null, null, \"5(?:00|2[12]|33|44|66|77|88)[2-9]\\\\d{6}\", null, null, null, \"5002345678\"], [null, null, null, null, null, null, null, null, null, [-1]], \"BM\", 1, \"011\", \"1\", null, null, \"1\", null, null, null, null, null, [null, null, null, null, null, null, null, null, null, [-1]], null, \"441\", [null, null, null, null, null, null, null, null, null, [-1]], [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]],\n    BS: [null, [null, null, \"(?:242|[58]\\\\d\\\\d|900)\\\\d{7}\", null, null, null, null, null, null, [10], [7]], [null, null, \"242(?:3(?:02|[236][1-9]|4[0-24-9]|5[0-68]|7[347]|8[0-4]|9[2-467])|461|502|6(?:0[1-4]|12|2[013]|[45]0|7[67]|8[78]|9[89])|7(?:02|88))\\\\d{4}\", null, null, null, \"2423456789\", null, null, null, [7]], [null, null, \"242(?:3(?:5[79]|7[56]|95)|4(?:[23][1-9]|4[1-35-9]|5[1-8]|6[2-8]|7\\\\d|81)|5(?:2[45]|3[35]|44|5[1-46-9]|65|77)|6[34]6|7(?:27|38)|8(?:0[1-9]|1[02-9]|2\\\\d|[89]9))\\\\d{4}\", null, null, null, \"2423591234\", null, null, null, [7]], [null, null, \"(?:242300|8(?:00|33|44|55|66|77|88)[2-9]\\\\d\\\\d)\\\\d{4}\", null, null, null, \"8002123456\", null, null, null, [7]], [null, null, \"900[2-9]\\\\d{6}\", null, null, null, \"9002123456\"], [null, null, null, null, null, null, null, null, null, [-1]], [null, null, \"5(?:00|2[12]|33|44|66|77|88)[2-9]\\\\d{6}\", null, null, null, \"5002345678\"], [null, null, null, null, null, null, null, null, null, [-1]], \"BS\", 1, \"011\", \"1\", null, null, \"1\", null, null, null, null, null, [null, null, null, null, null, null, null, null, null, [-1]], null, \"242\", [null, null, null, null, null, null, null, null, null, [-1]], [null, null, \"242225[0-46-9]\\\\d{3}\", null, null, null, \"2422250123\"], null, null, [null, null, null, null, null, null, null, null, null, [-1]]],\n    CA: [null, [null, null, \"(?:[2-8]\\\\d|90)\\\\d{8}\", null, null, null, null, null, null, [10], [7]], [null, null, \"(?:2(?:04|[23]6|[48]9|50)|3(?:06|43|65)|4(?:03|1[68]|3[178]|50)|5(?:06|1[49]|48|79|8[17])|6(?:04|13|39|47)|7(?:0[59]|78|8[02])|8(?:[06]7|19|25|73)|90[25])[2-9]\\\\d{6}\", null, null, null, \"5062345678\", null, null, null, [7]], [null, null, \"(?:2(?:04|[23]6|[48]9|50)|3(?:06|43|65)|4(?:03|1[68]|3[178]|50)|5(?:06|1[49]|48|79|8[17])|6(?:04|13|39|47)|7(?:0[59]|78|8[02])|8(?:[06]7|19|25|73)|90[25])[2-9]\\\\d{6}\", null, null, null, \"5062345678\", null, null, null, [7]], [null, null, \"8(?:00|33|44|55|66|77|88)[2-9]\\\\d{6}\", null, null, null, \"8002123456\"], [null, null, \"900[2-9]\\\\d{6}\", null, null, null, \"9002123456\"], [null, null, null, null, null, null, null, null, null, [-1]], [null, null, \"(?:5(?:00|2[12]|33|44|66|77|88)|622)[2-9]\\\\d{6}\", null, null, null, \"5002345678\"], [null, null, \"600[2-9]\\\\d{6}\", null, null, null, \"6002012345\"], \"CA\", 1, \"011\", \"1\", null, null, \"1\", null, null, 1, null, null, [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]], [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]],\n    DM: [null, [null, null, \"(?:[58]\\\\d\\\\d|767|900)\\\\d{7}\", null, null, null, null, null, null, [10], [7]], [null, null, \"767(?:2(?:55|66)|4(?:2[01]|4[0-25-9])|50[0-4]|70[1-3])\\\\d{4}\", null, null, null, \"7674201234\", null, null, null, [7]], [null, null, \"767(?:2(?:[2-4689]5|7[5-7])|31[5-7]|61[1-7])\\\\d{4}\", null, null, null, \"7672251234\", null, null, null, [7]], [null, null, \"8(?:00|33|44|55|66|77|88)[2-9]\\\\d{6}\", null, null, null, \"8002123456\"], [null, null, \"900[2-9]\\\\d{6}\", null, null, null, \"9002123456\"], [null, null, null, null, null, null, null, null, null, [-1]], [null, null, \"5(?:00|2[12]|33|44|66|77|88)[2-9]\\\\d{6}\", null, null, null, \"5002345678\"], [null, null, null, null, null, null, null, null, null, [-1]], \"DM\", 1, \"011\", \"1\", null, null, \"1\", null, null, null, null, null, [null, null, null, null, null, null, null, null, null, [-1]], null, \"767\", [null, null, null, null, null, null, null, null, null, [-1]], [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]],\n    DO: [null, [null, null, \"(?:[58]\\\\d\\\\d|900)\\\\d{7}\", null, null, null, null, null, null, [10], [7]], [null, null, \"8(?:[04]9[2-9]\\\\d\\\\d|29(?:2(?:[0-59]\\\\d|6[04-9]|7[0-27]|8[0237-9])|3(?:[0-35-9]\\\\d|4[7-9])|[45]\\\\d\\\\d|6(?:[0-27-9]\\\\d|[3-5][1-9]|6[0135-8])|7(?:0[013-9]|[1-37]\\\\d|4[1-35689]|5[1-4689]|6[1-57-9]|8[1-79]|9[1-8])|8(?:0[146-9]|1[0-48]|[248]\\\\d|3[1-79]|5[01589]|6[013-68]|7[124-8]|9[0-8])|9(?:[0-24]\\\\d|3[02-46-9]|5[0-79]|60|7[0169]|8[57-9]|9[02-9])))\\\\d{4}\", null, null, null, \"8092345678\", null, null, null, [7]], [null, null, \"8[024]9[2-9]\\\\d{6}\", null, null, null, \"8092345678\", null, null, null, [7]], [null, null, \"8(?:00|33|44|55|66|77|88)[2-9]\\\\d{6}\", null, null, null, \"8002123456\"], [null, null, \"900[2-9]\\\\d{6}\", null, null, null, \"9002123456\"], [null, null, null, null, null, null, null, null, null, [-1]], [null, null, \"5(?:00|2[12]|33|44|66|77|88)[2-9]\\\\d{6}\", null, null, null, \"5002345678\"], [null, null, null, null, null, null, null, null, null, [-1]], \"DO\", 1, \"011\", \"1\", null, null, \"1\", null, null, null, null, null, [null, null, null, null, null, null, null, null, null, [-1]], null, \"8[024]9\", [null, null, null, null, null, null, null, null, null, [-1]], [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]],\n    GD: [null, [null, null, \"(?:473|[58]\\\\d\\\\d|900)\\\\d{7}\", null, null, null, null, null, null, [10], [7]], [null, null, \"473(?:2(?:3[0-2]|69)|3(?:2[89]|86)|4(?:[06]8|3[5-9]|4[0-49]|5[5-79]|73|90)|63[68]|7(?:58|84)|800|938)\\\\d{4}\", null, null, null, \"4732691234\", null, null, null, [7]], [null, null, \"473(?:4(?:0[2-79]|1[04-9]|2[0-5]|58)|5(?:2[01]|3[3-8])|901)\\\\d{4}\", null, null, null, \"4734031234\", null, null, null, [7]], [null, null, \"8(?:00|33|44|55|66|77|88)[2-9]\\\\d{6}\", null, null, null, \"8002123456\"], [null, null, \"900[2-9]\\\\d{6}\", null, null, null, \"9002123456\"], [null, null, null, null, null, null, null, null, null, [-1]], [null, null, \"5(?:00|2[12]|33|44|66|77|88)[2-9]\\\\d{6}\", null, null, null, \"5002345678\"], [null, null, null, null, null, null, null, null, null, [-1]], \"GD\", 1, \"011\", \"1\", null, null, \"1\", null, null, null, null, null, [null, null, null, null, null, null, null, null, null, [-1]], null, \"473\", [null, null, null, null, null, null, null, null, null, [-1]], [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]],\n    GU: [null, [null, null, \"(?:[58]\\\\d\\\\d|671|900)\\\\d{7}\", null, null, null, null, null, null, [10], [7]], [null, null, \"671(?:3(?:00|3[39]|4[349]|55|6[26])|4(?:00|56|7[1-9]|8[0236-9])|5(?:55|6[2-5]|88)|6(?:3[2-578]|4[24-9]|5[34]|78|8[235-9])|7(?:[0479]7|2[0167]|3[45]|8[7-9])|8(?:[2-57-9]8|6[48])|9(?:2[29]|6[79]|7[1279]|8[7-9]|9[78]))\\\\d{4}\", null, null, null, \"6713001234\", null, null, null, [7]], [null, null, \"671(?:3(?:00|3[39]|4[349]|55|6[26])|4(?:00|56|7[1-9]|8[0236-9])|5(?:55|6[2-5]|88)|6(?:3[2-578]|4[24-9]|5[34]|78|8[235-9])|7(?:[0479]7|2[0167]|3[45]|8[7-9])|8(?:[2-57-9]8|6[48])|9(?:2[29]|6[79]|7[1279]|8[7-9]|9[78]))\\\\d{4}\", null, null, null, \"6713001234\", null, null, null, [7]], [null, null, \"8(?:00|33|44|55|66|77|88)[2-9]\\\\d{6}\", null, null, null, \"8002123456\"], [null, null, \"900[2-9]\\\\d{6}\", null, null, null, \"9002123456\"], [null, null, null, null, null, null, null, null, null, [-1]], [null, null, \"5(?:00|2[12]|33|44|66|77|88)[2-9]\\\\d{6}\", null, null, null, \"5002345678\"], [null, null, null, null, null, null, null, null, null, [-1]], \"GU\", 1, \"011\", \"1\", null, null, \"1\", null, null, 1, null, null, [null, null, null, null, null, null, null, null, null, [-1]], null, \"671\", [null, null, null, null, null, null, null, null, null, [-1]], [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]],\n    JM: [null, [null, null, \"(?:[58]\\\\d\\\\d|658|900)\\\\d{7}\", null, null, null, null, null, null, [10], [7]], [null, null, \"(?:658[2-9]\\\\d\\\\d|876(?:5(?:0[12]|1[0-468]|2[35]|63)|6(?:0[1-3579]|1[0237-9]|[23]\\\\d|40|5[06]|6[2-589]|7[05]|8[04]|9[4-9])|7(?:0[2-689]|[1-6]\\\\d|8[056]|9[45])|9(?:0[1-8]|1[02378]|[2-8]\\\\d|9[2-468])))\\\\d{4}\", null, null, null, \"8765230123\", null, null, null, [7]], [null, null, \"876(?:(?:2[14-9]|[348]\\\\d)\\\\d|5(?:0[3-9]|[2-57-9]\\\\d|6[0-24-9])|7(?:0[07]|7\\\\d|8[1-47-9]|9[0-36-9])|9(?:[01]9|9[0579]))\\\\d{4}\", null, null, null, \"8762101234\", null, null, null, [7]], [null, null, \"8(?:00|33|44|55|66|77|88)[2-9]\\\\d{6}\", null, null, null, \"8002123456\"], [null, null, \"900[2-9]\\\\d{6}\", null, null, null, \"9002123456\"], [null, null, null, null, null, null, null, null, null, [-1]], [null, null, \"5(?:00|2[12]|33|44|66|77|88)[2-9]\\\\d{6}\", null, null, null, \"5002345678\"], [null, null, null, null, null, null, null, null, null, [-1]], \"JM\", 1, \"011\", \"1\", null, null, \"1\", null, null, null, null, null, [null, null, null, null, null, null, null, null, null, [-1]], null, \"658|876\", [null, null, null, null, null, null, null, null, null, [-1]], [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]],\n    KN: [null, [null, null, \"(?:[58]\\\\d\\\\d|900)\\\\d{7}\", null, null, null, null, null, null, [10], [7]], [null, null, \"869(?:2(?:29|36)|302|4(?:6[015-9]|70))\\\\d{4}\", null, null, null, \"8692361234\", null, null, null, [7]], [null, null, \"869(?:5(?:5[6-8]|6[5-7])|66\\\\d|76[02-7])\\\\d{4}\", null, null, null, \"8697652917\", null, null, null, [7]], [null, null, \"8(?:00|33|44|55|66|77|88)[2-9]\\\\d{6}\", null, null, null, \"8002123456\"], [null, null, \"900[2-9]\\\\d{6}\", null, null, null, \"9002123456\"], [null, null, null, null, null, null, null, null, null, [-1]], [null, null, \"5(?:00|2[12]|33|44|66|77|88)[2-9]\\\\d{6}\", null, null, null, \"5002345678\"], [null, null, null, null, null, null, null, null, null, [-1]], \"KN\", 1, \"011\", \"1\", null, null, \"1\", null, null, null, null, null, [null, null, null, null, null, null, null, null, null, [-1]], null, \"869\", [null, null, null, null, null, null, null, null, null, [-1]], [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]],\n    KY: [null, [null, null, \"(?:345|[58]\\\\d\\\\d|900)\\\\d{7}\", null, null, null, null, null, null, [10], [7]], [null, null, \"345(?:2(?:22|44)|444|6(?:23|38|40)|7(?:4[35-79]|6[6-9]|77)|8(?:00|1[45]|25|[48]8)|9(?:14|4[035-9]))\\\\d{4}\", null, null, null, \"3452221234\", null, null, null, [7]], [null, null, \"345(?:32[1-9]|5(?:1[67]|2[5-79]|4[6-9]|50|76)|649|9(?:1[67]|2[2-9]|3[689]))\\\\d{4}\", null, null, null, \"3453231234\", null, null, null, [7]], [null, null, \"8(?:00|33|44|55|66|77|88)[2-9]\\\\d{6}\", null, null, null, \"8002345678\"], [null, null, \"(?:345976|900[2-9]\\\\d\\\\d)\\\\d{4}\", null, null, null, \"9002345678\"], [null, null, null, null, null, null, null, null, null, [-1]], [null, null, \"5(?:00|2[12]|33|44|66|77|88)[2-9]\\\\d{6}\", null, null, null, \"5002345678\"], [null, null, null, null, null, null, null, null, null, [-1]], \"KY\", 1, \"011\", \"1\", null, null, \"1\", null, null, null, null, null, [null, null, \"345849\\\\d{4}\", null, null, null, \"3458491234\"], null, \"345\", [null, null, null, null, null, null, null, null, null, [-1]], [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]],\n    LC: [null, [null, null, \"(?:[58]\\\\d\\\\d|758|900)\\\\d{7}\", null, null, null, null, null, null, [10], [7]], [null, null, \"758(?:4(?:30|5\\\\d|6[2-9]|8[0-2])|57[0-2]|638)\\\\d{4}\", null, null, null, \"7584305678\", null, null, null, [7]], [null, null, \"758(?:28[4-7]|384|4(?:6[01]|8[4-9])|5(?:1[89]|20|84)|7(?:1[2-9]|2\\\\d|3[01]))\\\\d{4}\", null, null, null, \"7582845678\", null, null, null, [7]], [null, null, \"8(?:00|33|44|55|66|77|88)[2-9]\\\\d{6}\", null, null, null, \"8002123456\"], [null, null, \"900[2-9]\\\\d{6}\", null, null, null, \"9002123456\"], [null, null, null, null, null, null, null, null, null, [-1]], [null, null, \"5(?:00|2[12]|33|44|66|77|88)[2-9]\\\\d{6}\", null, null, null, \"5002345678\"], [null, null, null, null, null, null, null, null, null, [-1]], \"LC\", 1, \"011\", \"1\", null, null, \"1\", null, null, null, null, null, [null, null, null, null, null, null, null, null, null, [-1]], null, \"758\", [null, null, null, null, null, null, null, null, null, [-1]], [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]],\n    MP: [null, [null, null, \"(?:[58]\\\\d\\\\d|(?:67|90)0)\\\\d{7}\", null, null, null, null, null, null, [10], [7]], [null, null, \"670(?:2(?:3[3-7]|56|8[5-8])|32[1-38]|4(?:33|8[348])|5(?:32|55|88)|6(?:64|70|82)|78[3589]|8[3-9]8|989)\\\\d{4}\", null, null, null, \"6702345678\", null, null, null, [7]], [null, null, \"670(?:2(?:3[3-7]|56|8[5-8])|32[1-38]|4(?:33|8[348])|5(?:32|55|88)|6(?:64|70|82)|78[3589]|8[3-9]8|989)\\\\d{4}\", null, null, null, \"6702345678\", null, null, null, [7]], [null, null, \"8(?:00|33|44|55|66|77|88)[2-9]\\\\d{6}\", null, null, null, \"8002123456\"], [null, null, \"900[2-9]\\\\d{6}\", null, null, null, \"9002123456\"], [null, null, null, null, null, null, null, null, null, [-1]], [null, null, \"5(?:00|2[12]|33|44|66|77|88)[2-9]\\\\d{6}\", null, null, null, \"5002345678\"], [null, null, null, null, null, null, null, null, null, [-1]], \"MP\", 1, \"011\", \"1\", null, null, \"1\", null, null, 1, null, null, [null, null, null, null, null, null, null, null, null, [-1]], null, \"670\", [null, null, null, null, null, null, null, null, null, [-1]], [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]],\n    MS: [null, [null, null, \"(?:(?:[58]\\\\d\\\\d|900)\\\\d\\\\d|66449)\\\\d{5}\", null, null, null, null, null, null, [10], [7]], [null, null, \"664491\\\\d{4}\", null, null, null, \"6644912345\", null, null, null, [7]], [null, null, \"66449[2-6]\\\\d{4}\", null, null, null, \"6644923456\", null, null, null, [7]], [null, null, \"8(?:00|33|44|55|66|77|88)[2-9]\\\\d{6}\", null, null, null, \"8002123456\"], [null, null, \"900[2-9]\\\\d{6}\", null, null, null, \"9002123456\"], [null, null, null, null, null, null, null, null, null, [-1]], [null, null, \"5(?:00|2[12]|33|44|66|77|88)[2-9]\\\\d{6}\", null, null, null, \"5002345678\"], [null, null, null, null, null, null, null, null, null, [-1]], \"MS\", 1, \"011\", \"1\", null, null, \"1\", null, null, null, null, null, [null, null, null, null, null, null, null, null, null, [-1]], null, \"664\", [null, null, null, null, null, null, null, null, null, [-1]], [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]],\n    PR: [null, [null, null, \"(?:[589]\\\\d\\\\d|787)\\\\d{7}\", null, null, null, null, null, null, [10], [7]], [null, null, \"(?:787|939)[2-9]\\\\d{6}\", null, null, null, \"7872345678\", null, null, null, [7]], [null, null, \"(?:787|939)[2-9]\\\\d{6}\", null, null, null, \"7872345678\", null, null, null, [7]], [null, null, \"8(?:00|33|44|55|66|77|88)[2-9]\\\\d{6}\", null, null, null, \"8002345678\"], [null, null, \"900[2-9]\\\\d{6}\", null, null, null, \"9002345678\"], [null, null, null, null, null, null, null, null, null, [-1]], [null, null, \"5(?:00|2[12]|33|44|66|77|88)[2-9]\\\\d{6}\", null, null, null, \"5002345678\"], [null, null, null, null, null, null, null, null, null, [-1]], \"PR\", 1, \"011\", \"1\", null, null, \"1\", null, null, 1, null, null, [null, null, null, null, null, null, null, null, null, [-1]], null, \"787|939\", [null, null, null, null, null, null, null, null, null, [-1]], [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]],\n    SX: [null, [null, null, \"(?:(?:[58]\\\\d\\\\d|900)\\\\d|7215)\\\\d{6}\", null, null, null, null, null, null, [10], [7]], [null, null, \"7215(?:4[2-8]|8[239]|9[056])\\\\d{4}\", null, null, null, \"7215425678\", null, null, null, [7]], [null, null, \"7215(?:1[02]|2\\\\d|5[034679]|8[014-8])\\\\d{4}\", null, null, null, \"7215205678\", null, null, null, [7]], [null, null, \"8(?:00|33|44|55|66|77|88)[2-9]\\\\d{6}\", null, null, null, \"8002123456\"], [null, null, \"900[2-9]\\\\d{6}\", null, null, null, \"9002123456\"], [null, null, null, null, null, null, null, null, null, [-1]], [null, null, \"5(?:00|2[12]|33|44|66|77|88)[2-9]\\\\d{6}\", null, null, null, \"5002345678\"], [null, null, null, null, null, null, null, null, null, [-1]], \"SX\", 1, \"011\", \"1\", null, null, \"1\", null, null, null, null, null, [null, null, null, null, null, null, null, null, null, [-1]], null, \"721\", [null, null, null, null, null, null, null, null, null, [-1]], [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]],\n    TC: [null, [null, null, \"(?:[58]\\\\d\\\\d|649|900)\\\\d{7}\", null, null, null, null, null, null, [10], [7]], [null, null, \"649(?:712|9(?:4\\\\d|50))\\\\d{4}\", null, null, null, \"6497121234\", null, null, null, [7]], [null, null, \"649(?:2(?:3[129]|4[1-7])|3(?:3[1-389]|4[1-8])|4[34][1-3])\\\\d{4}\", null, null, null, \"6492311234\", null, null, null, [7]], [null, null, \"8(?:00|33|44|55|66|77|88)[2-9]\\\\d{6}\", null, null, null, \"8002345678\"], [null, null, \"900[2-9]\\\\d{6}\", null, null, null, \"9002345678\"], [null, null, null, null, null, null, null, null, null, [-1]], [null, null, \"5(?:00|2[12]|33|44|66|77|88)[2-9]\\\\d{6}\", null, null, null, \"5002345678\"], [null, null, \"64971[01]\\\\d{4}\", null, null, null, \"6497101234\", null, null, null, [7]], \"TC\", 1, \"011\", \"1\", null, null, \"1\", null, null, null, null, null, [null, null, null, null, null, null, null, null, null, [-1]], null, \"649\", [null, null, null, null, null, null, null, null, null, [-1]], [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]],\n    TT: [null, [null, null, \"(?:[58]\\\\d\\\\d|900)\\\\d{7}\", null, null, null, null, null, null, [10], [7]], [null, null, \"868(?:2(?:01|[23]\\\\d)|6(?:0[7-9]|1[02-8]|2[1-9]|[3-69]\\\\d|7[0-79])|82[124])\\\\d{4}\", null, null, null, \"8682211234\", null, null, null, [7]], [null, null, \"868(?:2(?:6[6-9]|[7-9]\\\\d)|[37](?:0[1-9]|1[02-9]|[2-9]\\\\d)|4[6-9]\\\\d|6(?:20|78|8\\\\d))\\\\d{4}\", null, null, null, \"8682911234\", null, null, null, [7]], [null, null, \"8(?:00|33|44|55|66|77|88)[2-9]\\\\d{6}\", null, null, null, \"8002345678\"], [null, null, \"900[2-9]\\\\d{6}\", null, null, null, \"9002345678\"], [null, null, null, null, null, null, null, null, null, [-1]], [null, null, \"5(?:00|2[12]|33|44|66|77|88)[2-9]\\\\d{6}\", null, null, null, \"5002345678\"], [null, null, null, null, null, null, null, null, null, [-1]], \"TT\", 1, \"011\", \"1\", null, null, \"1\", null, null, null, null, null, [null, null, null, null, null, null, null, null, null, [-1]], null, \"868\", [null, null, null, null, null, null, null, null, null, [-1]], [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, \"868619\\\\d{4}\", null, null, null, \"8686191234\", null, null, null, [7]]],\n    US: [null, [null, null, \"[2-9]\\\\d{9}\", null, null, null, null, null, null, [10], [7]], [null, null, \"(?:2(?:0[1-35-9]|1[02-9]|2[03-589]|3[149]|4[08]|5[1-46]|6[0279]|7[0269]|8[13])|3(?:0[1-57-9]|1[02-9]|2[0135]|3[0-24679]|4[67]|5[12]|6[014]|8[056])|4(?:0[124-9]|1[02-579]|2[3-5]|3[0245]|4[0235]|58|6[39]|7[0589]|8[04])|5(?:0[1-57-9]|1[0235-8]|20|3[0149]|4[01]|5[19]|6[1-47]|7[013-5]|8[056])|6(?:0[1-35-9]|1[024-9]|2[03689]|[34][016]|5[017]|6[0-279]|78|8[0-2])|7(?:0[1-46-8]|1[2-9]|2[04-7]|3[1247]|4[037]|5[47]|6[02359]|7[02-59]|8[156])|8(?:0[1-68]|1[02-8]|2[08]|3[0-28]|4[3578]|5[046-9]|6[02-5]|7[028])|9(?:0[1346-9]|1[02-9]|2[0589]|3[0146-8]|4[0179]|5[12469]|7[0-389]|8[04-69]))[2-9]\\\\d{6}\", null, null, null, \"2015550123\", null, null, null, [7]], [null, null, \"(?:2(?:0[1-35-9]|1[02-9]|2[03-589]|3[149]|4[08]|5[1-46]|6[0279]|7[0269]|8[13])|3(?:0[1-57-9]|1[02-9]|2[0135]|3[0-24679]|4[67]|5[12]|6[014]|8[056])|4(?:0[124-9]|1[02-579]|2[3-5]|3[0245]|4[0235]|58|6[39]|7[0589]|8[04])|5(?:0[1-57-9]|1[0235-8]|20|3[0149]|4[01]|5[19]|6[1-47]|7[013-5]|8[056])|6(?:0[1-35-9]|1[024-9]|2[03689]|[34][016]|5[017]|6[0-279]|78|8[0-2])|7(?:0[1-46-8]|1[2-9]|2[04-7]|3[1247]|4[037]|5[47]|6[02359]|7[02-59]|8[156])|8(?:0[1-68]|1[02-8]|2[08]|3[0-28]|4[3578]|5[046-9]|6[02-5]|7[028])|9(?:0[1346-9]|1[02-9]|2[0589]|3[0146-8]|4[0179]|5[12469]|7[0-389]|8[04-69]))[2-9]\\\\d{6}\", null, null, null, \"2015550123\", null, null, null, [7]], [null, null, \"8(?:00|33|44|55|66|77|88)[2-9]\\\\d{6}\", null, null, null, \"8002345678\"], [null, null, \"900[2-9]\\\\d{6}\", null, null, null, \"9002345678\"], [null, null, null, null, null, null, null, null, null, [-1]], [null, null, \"5(?:00|2[12]|33|44|66|77|88)[2-9]\\\\d{6}\", null, null, null, \"5002345678\"], [null, null, null, null, null, null, null, null, null, [-1]], \"US\", 1, \"011\", \"1\", null, null, \"1\", null, null, 1, [[null, \"(\\\\d{3})(\\\\d{4})\", \"$1-$2\", [\"[2-9]\"]], [null, \"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"($1) $2-$3\", [\"[2-9]\"], null, null, 1]], [[null, \"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1-$2-$3\", [\"[2-9]\"]]], [null, null, null, null, null, null, null, null, null, [-1]], 1, null, [null, null, null, null, null, null, null, null, null, [-1]], [null, null, \"710[2-9]\\\\d{6}\", null, null, null, \"7102123456\"], null, null, [null, null, null, null, null, null, null, null, null, [-1]]],\n    VC: [null, [null, null, \"(?:[58]\\\\d\\\\d|784|900)\\\\d{7}\", null, null, null, null, null, null, [10], [7]], [null, null, \"784(?:266|3(?:6[6-9]|7\\\\d|8[0-24-6])|4(?:38|5[0-36-8]|8[0-8])|5(?:55|7[0-2]|93)|638|784)\\\\d{4}\", null, null, null, \"7842661234\", null, null, null, [7]], [null, null, \"784(?:4(?:3[0-5]|5[45]|89|9[0-8])|5(?:2[6-9]|3[0-4]))\\\\d{4}\", null, null, null, \"7844301234\", null, null, null, [7]], [null, null, \"8(?:00|33|44|55|66|77|88)[2-9]\\\\d{6}\", null, null, null, \"8002345678\"], [null, null, \"900[2-9]\\\\d{6}\", null, null, null, \"9002345678\"], [null, null, null, null, null, null, null, null, null, [-1]], [null, null, \"5(?:00|2[12]|33|44|66|77|88)[2-9]\\\\d{6}\", null, null, null, \"5002345678\"], [null, null, null, null, null, null, null, null, null, [-1]], \"VC\", 1, \"011\", \"1\", null, null, \"1\", null, null, null, null, null, [null, null, null, null, null, null, null, null, null, [-1]], null, \"784\", [null, null, null, null, null, null, null, null, null, [-1]], [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]],\n    VG: [null, [null, null, \"(?:284|[58]\\\\d\\\\d|900)\\\\d{7}\", null, null, null, null, null, null, [10], [7]], [null, null, \"284(?:(?:229|774|8(?:52|6[459]))\\\\d|4(?:22\\\\d|9(?:[45]\\\\d|6[0-5])))\\\\d{3}\", null, null, null, \"2842291234\", null, null, null, [7]], [null, null, \"284(?:(?:3(?:0[0-3]|4[0-7]|68|9[34])|54[0-57])\\\\d|4(?:(?:4[0-6]|68)\\\\d|9(?:6[6-9]|9\\\\d)))\\\\d{3}\", null, null, null, \"2843001234\", null, null, null, [7]], [null, null, \"8(?:00|33|44|55|66|77|88)[2-9]\\\\d{6}\", null, null, null, \"8002345678\"], [null, null, \"900[2-9]\\\\d{6}\", null, null, null, \"9002345678\"], [null, null, null, null, null, null, null, null, null, [-1]], [null, null, \"5(?:00|2[12]|33|44|66|77|88)[2-9]\\\\d{6}\", null, null, null, \"5002345678\"], [null, null, null, null, null, null, null, null, null, [-1]], \"VG\", 1, \"011\", \"1\", null, null, \"1\", null, null, null, null, null, [null, null, null, null, null, null, null, null, null, [-1]], null, \"284\", [null, null, null, null, null, null, null, null, null, [-1]], [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]],\n    VI: [null, [null, null, \"(?:(?:34|90)0|[58]\\\\d\\\\d)\\\\d{7}\", null, null, null, null, null, null, [10], [7]], [null, null, \"340(?:2(?:01|2[06-8]|44|77)|3(?:32|44)|4(?:22|7[34])|5(?:1[34]|55)|6(?:26|4[23]|77|9[023])|7(?:1[2-57-9]|27|7\\\\d)|884|998)\\\\d{4}\", null, null, null, \"3406421234\", null, null, null, [7]], [null, null, \"340(?:2(?:01|2[06-8]|44|77)|3(?:32|44)|4(?:22|7[34])|5(?:1[34]|55)|6(?:26|4[23]|77|9[023])|7(?:1[2-57-9]|27|7\\\\d)|884|998)\\\\d{4}\", null, null, null, \"3406421234\", null, null, null, [7]], [null, null, \"8(?:00|33|44|55|66|77|88)[2-9]\\\\d{6}\", null, null, null, \"8002345678\"], [null, null, \"900[2-9]\\\\d{6}\", null, null, null, \"9002345678\"], [null, null, null, null, null, null, null, null, null, [-1]], [null, null, \"5(?:00|2[12]|33|44|66|77|88)[2-9]\\\\d{6}\", null, null, null, \"5002345678\"], [null, null, null, null, null, null, null, null, null, [-1]], \"VI\", 1, \"011\", \"1\", null, null, \"1\", null, null, 1, null, null, [null, null, null, null, null, null, null, null, null, [-1]], null, \"340\", [null, null, null, null, null, null, null, null, null, [-1]], [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]]\n  };\n\n  x.b = function () {\n    return x.a ? x.a : x.a = new x();\n  };\n\n  var ul = {\n    0: \"0\",\n    1: \"1\",\n    2: \"2\",\n    3: \"3\",\n    4: \"4\",\n    5: \"5\",\n    6: \"6\",\n    7: \"7\",\n    8: \"8\",\n    9: \"9\",\n    \"０\": \"0\",\n    \"１\": \"1\",\n    \"２\": \"2\",\n    \"３\": \"3\",\n    \"４\": \"4\",\n    \"５\": \"5\",\n    \"６\": \"6\",\n    \"７\": \"7\",\n    \"８\": \"8\",\n    \"９\": \"9\",\n    \"٠\": \"0\",\n    \"١\": \"1\",\n    \"٢\": \"2\",\n    \"٣\": \"3\",\n    \"٤\": \"4\",\n    \"٥\": \"5\",\n    \"٦\": \"6\",\n    \"٧\": \"7\",\n    \"٨\": \"8\",\n    \"٩\": \"9\",\n    \"۰\": \"0\",\n    \"۱\": \"1\",\n    \"۲\": \"2\",\n    \"۳\": \"3\",\n    \"۴\": \"4\",\n    \"۵\": \"5\",\n    \"۶\": \"6\",\n    \"۷\": \"7\",\n    \"۸\": \"8\",\n    \"۹\": \"9\"\n  },\n      tl = RegExp(\"[+＋]+\"),\n      el = RegExp(\"([0-9０-９٠-٩۰-۹])\"),\n      rl = /^\\(?\\$1\\)?$/,\n      il = new S();\n  m(il, 11, \"NA\");\n  var al = /\\[([^\\[\\]])*\\]/g,\n      dl = /\\d(?=[^,}][^,}])/g,\n      ol = RegExp(\"^[-x‐-―−ー－-／  ­​⁠　()（）［］.\\\\[\\\\]/~⁓∼～]*(\\\\$\\\\d[-x‐-―−ー－-／  ­​⁠　()（）［］.\\\\[\\\\]/~⁓∼～]*)+$\"),\n      sl = /[- ]/;\n  N.prototype.K = function () {\n    this.C = \"\", t(this.i), t(this.u), t(this.m), this.s = 0, this.w = \"\", t(this.b), this.h = \"\", t(this.a), this.l = !0, this.A = this.o = this.F = !1, this.f = [], this.B = !1, this.g != this.J && (this.g = D(this, this.D));\n  }, N.prototype.L = function (l) {\n    return this.C = I(this, l);\n  }, l(\"Cleave.AsYouTypeFormatter\", N), l(\"Cleave.AsYouTypeFormatter.prototype.inputDigit\", N.prototype.L), l(\"Cleave.AsYouTypeFormatter.prototype.clear\", N.prototype.K);\n}.call(\"object\" == typeof global && global ? global : window);","map":null,"metadata":{},"sourceType":"script"}